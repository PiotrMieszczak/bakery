/*
	HTML5 Reset :: style.css
	----------------------------------------------------------
	We have learned much from/been inspired by/taken code where offered from:

	Eric Meyer					:: http://meyerweb.com
	HTML5 Doctor				:: http://html5doctor.com
	and the HTML5 Boilerplate	:: http://html5boilerplate.com

-------------------------------------------------------------------------------*/
/* Let's default this puppy out
-------------------------------------------------------------------------------*/
/* line 15, src/scss/_reset.scss */
html, body, body div, span, object, iframe, h1, h2, h3, h4, h5, h6, p, blockquote, pre, abbr, address, cite, code, del, dfn, em, img, ins, kbd, q, samp, small, strong, sub, sup, var, b, i, dl, dt, dd, ol, ul, li, fieldset, form, label, legend, table, caption, tbody, tfoot, thead, tr, th, td, article, aside, figure, footer, header, menu, nav, section, time, mark, audio, video, details, summary {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font-weight: normal;
  vertical-align: baseline;
  background: transparent;
}

/* line 25, src/scss/_reset.scss */
main, article, aside, figure, footer, header, nav, section, details, summary {
  display: block;
}

/* Handle box-sizing while better addressing child elements:
   http://css-tricks.com/inheriting-box-sizing-probably-slightly-better-best-practice/ */
/* line 29, src/scss/_reset.scss */
html {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
}

/* line 33, src/scss/_reset.scss */
*,
*:before,
*:after {
  -webkit-box-sizing: inherit;
          box-sizing: inherit;
}

/* consider resetting the default cursor: https://gist.github.com/murtaugh/5247154 */
/* Responsive images and other embedded objects */
/* if you don't have full control over `img` tags (if you have to overcome attributes), consider adding height: auto */
/* line 43, src/scss/_reset.scss */
img,
object,
embed {
  max-width: 100%;
}

/*
   Note: keeping IMG here will cause problems if you're using foreground images as sprites.
	In fact, it *will* cause problems with Google Maps' controls at small size.
	If this is the case for you, try uncommenting the following:

#map img {
		max-width: none;
}
*/
/* force a vertical scrollbar to prevent a jumpy page */
/* line 58, src/scss/_reset.scss */
html {
  overflow-y: scroll;
}

/* we use a lot of ULs that aren't bulleted.
	you'll have to restore the bullets within content,
	which is fine because they're probably customized anyway */
/* line 63, src/scss/_reset.scss */
ul {
  list-style: none;
}

/* line 65, src/scss/_reset.scss */
blockquote, q {
  quotes: none;
}

/* line 67, src/scss/_reset.scss */
blockquote:before,
blockquote:after,
q:before,
q:after {
  content: '';
  content: none;
}

/* line 72, src/scss/_reset.scss */
a {
  margin: 0;
  padding: 0;
  font-size: 100%;
  vertical-align: baseline;
  background: transparent;
}

/* line 74, src/scss/_reset.scss */
del {
  text-decoration: line-through;
}

/* line 76, src/scss/_reset.scss */
abbr[title], dfn[title] {
  border-bottom: 1px dotted #000;
  cursor: help;
}

/* tables still need cellspacing="0" in the markup */
/* line 79, src/scss/_reset.scss */
table {
  border-collapse: separate;
  border-spacing: 0;
}

/* line 80, src/scss/_reset.scss */
th {
  font-weight: bold;
  vertical-align: bottom;
}

/* line 81, src/scss/_reset.scss */
td {
  font-weight: normal;
  vertical-align: top;
}

/* line 83, src/scss/_reset.scss */
hr {
  display: block;
  height: 1px;
  border: 0;
  border-top: 1px solid #ccc;
  margin: 1em 0;
  padding: 0;
}

/* line 85, src/scss/_reset.scss */
input, select {
  vertical-align: middle;
}

/* line 87, src/scss/_reset.scss */
pre {
  white-space: pre;
  /* CSS2 */
  white-space: pre-wrap;
  /* CSS 2.1 */
  white-space: pre-line;
  /* CSS 3 (and 2.1 as well, actually) */
  word-wrap: break-word;
  /* IE */
}

/* line 94, src/scss/_reset.scss */
input[type="radio"] {
  vertical-align: text-bottom;
}

/* line 95, src/scss/_reset.scss */
input[type="checkbox"] {
  vertical-align: bottom;
}

/* line 96, src/scss/_reset.scss */
.ie7 input[type="checkbox"] {
  vertical-align: baseline;
}

/* line 97, src/scss/_reset.scss */
.ie6 input {
  vertical-align: text-bottom;
}

/* line 99, src/scss/_reset.scss */
select, input, textarea {
  font: 99% sans-serif;
}

/* line 101, src/scss/_reset.scss */
table {
  font-size: inherit;
  font: 100%;
}

/* line 103, src/scss/_reset.scss */
small {
  font-size: 85%;
}

/* line 105, src/scss/_reset.scss */
strong {
  font-weight: bold;
}

/* line 107, src/scss/_reset.scss */
td, td img {
  vertical-align: top;
}

/* Make sure sup and sub don't mess with your line-heights http://gist.github.com/413930 */
/* line 110, src/scss/_reset.scss */
sub, sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
}

/* line 111, src/scss/_reset.scss */
sup {
  top: -0.5em;
}

/* line 112, src/scss/_reset.scss */
sub {
  bottom: -0.25em;
}

/* standardize any monospaced elements */
/* line 115, src/scss/_reset.scss */
pre, code, kbd, samp {
  font-family: monospace, sans-serif;
}

/* hand cursor on clickable elements */
/* line 118, src/scss/_reset.scss */
.clickable,
label,
input[type=button],
input[type=submit],
input[type=file],
button {
  cursor: pointer;
}

/* Webkit browsers add a 2px margin outside the chrome of form elements */
/* line 126, src/scss/_reset.scss */
button, input, select, textarea {
  margin: 0;
}

/* make buttons play nice in IE */
/* line 129, src/scss/_reset.scss */
button,
input[type=button] {
  width: auto;
  overflow: visible;
}

/* scale images in IE7 more attractively */
/* line 133, src/scss/_reset.scss */
.ie7 img {
  -ms-interpolation-mode: bicubic;
}

/* prevent BG image flicker upon hover
   (commented out as usage is rare, and the filter syntax messes with some pre-processors)
.ie6 html {filter: expression(document.execCommand("BackgroundImageCache", false, true));}
*/
/* let's clear some floats */
/* line 141, src/scss/_reset.scss */
.clearfix:after {
  content: " ";
  display: block;
  clear: both;
}

/* line 3, src/scss/_grid.scss */
.container {
  width: 100%;
  max-width: 1200px;
  margin: 0 auto;
}

/* line 10, src/scss/_grid.scss */
.container .row::before, .container .row::after {
  content: "";
  display: block;
  height: 0;
  visibility: hidden;
  clear: both;
}

/* line 19, src/scss/_grid.scss */
.container [class*='col-'] {
  width: 100%;
  min-height: 1px;
  float: none;
}

@media (min-width: 640px) {
  /* line 26, src/scss/_grid.scss */
  .container [class*='col-'] {
    float: left;
  }
  /* line 31, src/scss/_grid.scss */
  .container .col-1 {
    width: 150px;
  }
  /* line 31, src/scss/_grid.scss */
  .container .col-2 {
    width: 300px;
  }
  /* line 31, src/scss/_grid.scss */
  .container .col-3 {
    width: 450px;
  }
  /* line 31, src/scss/_grid.scss */
  .container .col-4 {
    width: 600px;
  }
  /* line 31, src/scss/_grid.scss */
  .container .col-5 {
    width: 750px;
  }
  /* line 31, src/scss/_grid.scss */
  .container .col-6 {
    width: 900px;
  }
  /* line 31, src/scss/_grid.scss */
  .container .col-7 {
    width: 1050px;
  }
  /* line 31, src/scss/_grid.scss */
  .container .col-8 {
    width: 1200px;
  }
}

/* line 2, src/scss/_navigation.scss */
header {
  background-color: white;
}

/* line 4, src/scss/_navigation.scss */
header .logo {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
}

/* line 7, src/scss/_navigation.scss */
header .logo img {
  width: 200px;
  height: 200px;
}

@media (min-width: 640px) {
  /* line 7, src/scss/_navigation.scss */
  header .logo img {
    -ms-flex-wrap: nowrap;
        flex-wrap: nowrap;
    width: 300px;
    height: 300px;
  }
}

/* line 19, src/scss/_navigation.scss */
nav.menu {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  -ms-flex-line-pack: center;
      align-content: center;
  width: 100%;
}

/* line 25, src/scss/_navigation.scss */
nav.menu ul {
  width: 95%;
  margin: 0 auto;
}

@media (min-width: 640px) {
  /* line 25, src/scss/_navigation.scss */
  nav.menu ul {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -ms-flex-wrap: nowrap;
        flex-wrap: nowrap;
    width: 100%;
  }
}

/* line 34, src/scss/_navigation.scss */
nav.menu ul li {
  font-size: 16px;
  text-align: center;
  border: 2px solid transparent;
  border-top-color: pink;
  border-bottom-color: pink;
  padding: 1%;
  text-transform: uppercase;
  margin-bottom: 1%;
}

@media (min-width: 640px) {
  /* line 34, src/scss/_navigation.scss */
  nav.menu ul li {
    font-size: 18px;
    width: calc(1200px / 6);
    border-color: transparent;
    border-left-color: pink;
    border-right-color: pink;
  }
  /* line 52, src/scss/_navigation.scss */
  nav.menu ul li:first-of-type {
    border-left-width: 4px;
  }
  /* line 55, src/scss/_navigation.scss */
  nav.menu ul li:last-of-type {
    border-right-width: 4px;
  }
}

/* line 60, src/scss/_navigation.scss */
nav.menu ul li a {
  color: black;
  text-decoration: none;
  margin-bottom: 1%;
}

/* line 3, src/scss/_slider.scss */
.slider_wraper {
  border: 1px solid red;
  overflow: hidden;
}

/* line 7, src/scss/_slider.scss */
.slider_wraper .slider {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
}

/* line 9, src/scss/_slider.scss */
.slider_wraper .slider li {
  width: 100%;
  float: left;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9yZXNldC5zY3NzIiwibWFpbi5jc3MiLCJfZ3JpZC5zY3NzIiwiX3ZhcmlhYmxlcy5zY3NzIiwiX25hdmlnYXRpb24uc2NzcyIsIl9zbGlkZXIuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7O2lGQVNpRjtBQUVqRjtpRkFDaUY7QUNBakYsbUNBQW1DO0FERW5DO0VBQ0MsVUFBUztFQUNULFdBQVU7RUFDVixVQUFTO0VBQ1QsZ0JBQWU7RUFDZixvQkFBbUI7RUFDbkIseUJBQXdCO0VBQ3hCLHdCQUF1QjtDQUN2Qjs7QUNDRCxtQ0FBbUM7QURDbkM7RUFBOEUsZUFBYztDQUFJOztBQUVoRzt5RkFDeUY7QUNHekYsbUNBQW1DO0FERm5DO0VBQ0MsK0JBQXNCO1VBQXRCLHVCQUFzQjtDQUN0Qjs7QUNLRCxtQ0FBbUM7QURIbkM7OztFQUdDLDRCQUFtQjtVQUFuQixvQkFBbUI7Q0FDbkI7O0FBRUQscUZBQXFGO0FBRXJGLGtEQUFrRDtBQUNsRCx1SEFBdUg7QUNJdkgsbUNBQW1DO0FESG5DOzs7RUFFTyxnQkFBZTtDQUFJOztBQUUxQjs7Ozs7Ozs7RUFRRTtBQUVGLHdEQUF3RDtBQ014RCxtQ0FBbUM7QURMbkM7RUFBTSxtQkFBa0I7Q0FBSTs7QUFFNUI7OzREQUU0RDtBQ1M1RCxtQ0FBbUM7QURSbkM7RUFBSSxpQkFBZ0I7Q0FBSTs7QUNheEIsbUNBQW1DO0FEWG5DO0VBQWUsYUFBWTtDQUFJOztBQ2dCL0IsbUNBQW1DO0FEZG5DOzs7O0VBR1MsWUFBVztFQUFHLGNBQWE7Q0FBSTs7QUNvQnhDLG1DQUFtQztBRGxCbkM7RUFBRyxVQUFTO0VBQUcsV0FBVTtFQUFHLGdCQUFlO0VBQUcseUJBQXdCO0VBQUcsd0JBQXVCO0NBQUk7O0FDMkJwRyxtQ0FBbUM7QUR6Qm5DO0VBQUssOEJBQTZCO0NBQUk7O0FDOEJ0QyxtQ0FBbUM7QUQ1Qm5DO0VBQXlCLCtCQUE4QjtFQUFHLGFBQVk7Q0FBSTs7QUFFMUUscURBQXFEO0FDaUNyRCxtQ0FB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cUI7RUFDckIsa0JBQWlCO0NBRXBCOztBSGlXYixtQ0FBbUM7QUkvWm5DO0VBQ0ksc0JBQXFCO0VBQ3JCLGlCQUFnQjtDQVNuQjs7QUowWkQsbUNBQW1DO0FJcmFuQztFQUtRLHFCQUFZO0VBQVoscUJBQVk7RUFBWixjQUFZO0NBS2Y7O0FKZ2FMLG1DQUFtQztBSTFhbkM7RUFPWSxZQUFXO0VBQ1gsWUFBVztDQUNkIiwiZmlsZSI6Im1haW4uY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLypcblx0SFRNTDUgUmVzZXQgOjogc3R5bGUuY3NzXG5cdC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblx0V2UgaGF2ZSBsZWFybmVkIG11Y2ggZnJvbS9iZWVuIGluc3BpcmVkIGJ5L3Rha2VuIGNvZGUgd2hlcmUgb2ZmZXJlZCBmcm9tOlxuXG5cdEVyaWMgTWV5ZXJcdFx0XHRcdFx0OjogaHR0cDovL21leWVyd2ViLmNvbVxuXHRIVE1MNSBEb2N0b3JcdFx0XHRcdDo6IGh0dHA6Ly9odG1sNWRvY3Rvci5jb21cblx0YW5kIHRoZSBIVE1MNSBCb2lsZXJwbGF0ZVx0OjogaHR0cDovL2h0bWw1Ym9pbGVycGxhdGUuY29tXG5cbi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuXG4vKiBMZXQncyBkZWZhdWx0IHRoaXMgcHVwcHkgb3V0XG4tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cblxuaHRtbCwgYm9keSwgYm9keSBkaXYsIHNwYW4sIG9iamVjdCwgaWZyYW1lLCBoMSwgaDIsIGgzLCBoNCwgaDUsIGg2LCBwLCBibG9ja3F1b3RlLCBwcmUsIGFiYnIsIGFkZHJlc3MsIGNpdGUsIGNvZGUsIGRlbCwgZGZuLCBlbSwgaW1nLCBpbnMsIGtiZCwgcSwgc2FtcCwgc21hbGwsIHN0cm9uZywgc3ViLCBzdXAsIHZhciwgYiwgaSwgZGwsIGR0LCBkZCwgb2wsIHVsLCBsaSwgZmllbGRzZXQsIGZvcm0sIGxhYmVsLCBsZWdlbmQsIHRhYmxlLCBjYXB0aW9uLCB0Ym9keSwgdGZvb3QsIHRoZWFkLCB0ciwgdGgsIHRkLCBhcnRpY2xlLCBhc2lkZSwgZmlndXJlLCBmb290ZXIsIGhlYWRlciwgbWVudSwgbmF2LCBzZWN0aW9uLCB0aW1lLCBtYXJrLCBhdWRpbywgdmlkZW8sIGRldGFpbHMsIHN1bW1hcnkge1xuXHRtYXJnaW46IDA7XG5cdHBhZGRpbmc6IDA7XG5cdGJvcmRlcjogMDtcblx0Zm9udC1zaXplOiAxMDAlO1xuXHRmb250LXdlaWdodDogbm9ybWFsO1xuXHR2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XG5cdGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xufVxuXG5tYWluLCBhcnRpY2xlLCBhc2lkZSwgZmlndXJlLCBmb290ZXIsIGhlYWRlciwgbmF2LCBzZWN0aW9uLCBkZXRhaWxzLCBzdW1tYXJ5IHtkaXNwbGF5OiBibG9jazt9XG5cbi8qIEhhbmRsZSBib3gtc2l6aW5nIHdoaWxlIGJldHRlciBhZGRyZXNzaW5nIGNoaWxkIGVsZW1lbnRzOlxuICAgaHR0cDovL2Nzcy10cmlja3MuY29tL2luaGVyaXRpbmctYm94LXNpemluZy1wcm9iYWJseS1zbGlnaHRseS1iZXR0ZXItYmVzdC1wcmFjdGljZS8gKi9cbmh0bWwge1xuXHRib3gtc2l6aW5nOiBib3JkZXItYm94O1xufVxuXG4qLFxuKjpiZWZvcmUsXG4qOmFmdGVyIHtcblx0Ym94LXNpemluZzogaW5oZXJpdDtcbn1cblxuLyogY29uc2lkZXIgcmVzZXR0aW5nIHRoZSBkZWZhdWx0IGN1cnNvcjogaHR0cHM6Ly9naXN0LmdpdGh1Yi5jb20vbXVydGF1Z2gvNTI0NzE1NCAqL1xuXG4vKiBSZXNwb25zaXZlIGltYWdlcyBhbmQgb3RoZXIgZW1iZWRkZWQgb2JqZWN0cyAqL1xuLyogaWYgeW91IGRvbid0IGhhdmUgZnVsbCBjb250cm9sIG92ZXIgYGltZ2AgdGFncyAoaWYgeW91IGhhdmUgdG8gb3ZlcmNvbWUgYXR0cmlidXRlcyksIGNvbnNpZGVyIGFkZGluZyBoZWlnaHQ6IGF1dG8gKi9cbmltZyxcbm9iamVjdCxcbmVtYmVkIHttYXgtd2lkdGg6IDEwMCU7fVxuXG4vKlxuICAgTm90ZToga2VlcGluZyBJTUcgaGVyZSB3aWxsIGNhdXNlIHByb2JsZW1zIGlmIHlvdSdyZSB1c2luZyBmb3JlZ3JvdW5kIGltYWdlcyBhcyBzcHJpdGVzLlxuXHRJbiBmYWN0LCBpdCAqd2lsbCogY2F1c2UgcHJvYmxlbXMgd2l0aCBHb29nbGUgTWFwcycgY29udHJvbHMgYXQgc21hbGwgc2l6ZS5cblx0SWYgdGhpcyBpcyB0aGUgY2FzZSBmb3IgeW91LCB0cnkgdW5jb21tZW50aW5nIHRoZSBmb2xsb3dpbmc6XG5cbiNtYXAgaW1nIHtcblx0XHRtYXgtd2lkdGg6IG5vbmU7XG59XG4qL1xuXG4vKiBmb3JjZSBhIHZlcnRpY2FsIHNjcm9sbGJhciB0byBwcmV2ZW50IGEganVtcHkgcGFnZSAqL1xuaHRtbCB7b3ZlcmZsb3cteTogc2Nyb2xsO31cblxuLyogd2UgdXNlIGEgbG90IG9mIFVMcyB0aGF0IGFyZW4ndCBidWxsZXRlZC5cblx0eW91J2xsIGhhdmUgdG8gcmVzdG9yZSB0aGUgYnVsbGV0cyB3aXRoaW4gY29udGVudCxcblx0d2hpY2ggaXMgZmluZSBiZWNhdXNlIHRoZXkncmUgcHJvYmFibHkgY3VzdG9taXplZCBhbnl3YXkgKi9cbnVsIHtsaXN0LXN0eWxlOiBub25lO31cblxuYmxvY2txdW90ZSwgcSB7cXVvdGVzOiBub25lO31cblxuYmxvY2txdW90ZTpiZWZvcmUsXG5ibG9ja3F1b3RlOmFmdGVyLFxucTpiZWZvcmUsXG5xOmFmdGVyIHtjb250ZW50OiAnJzsgY29udGVudDogbm9uZTt9XG5cbmEge21hcmdpbjogMDsgcGFkZGluZzogMDsgZm9udC1zaXplOiAxMDAlOyB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7IGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O31cblxuZGVsIHt0ZXh0LWRlY29yYXRpb246IGxpbmUtdGhyb3VnaDt9XG5cbmFiYnJbdGl0bGVdLCBkZm5bdGl0bGVdIHtib3JkZXItYm90dG9tOiAxcHggZG90dGVkICMwMDA7IGN1cnNvcjogaGVscDt9XG5cbi8qIHRhYmxlcyBzdGlsbCBuZWVkIGNlbGxzcGFjaW5nPVwiMFwiIGluIHRoZSBtYXJrdXAgKi9cbnRhYmxlIHtib3JkZXItY29sbGFwc2U6IHNlcGFyYXRlOyBib3JkZXItc3BhY2luZzogMDt9XG50aCB7Zm9udC13ZWlnaHQ6IGJvbGQ7IHZlcnRpY2FsLWFsaWduOiBib3R0b207fVxudGQge2ZvbnQtd2VpZ2h0OiBub3JtYWw7IHZlcnRpY2FsLWFsaWduOiB0b3A7fVxuXG5ociB7ZGlzcGxheTogYmxvY2s7IGhlaWdodDogMXB4OyBib3JkZXI6IDA7IGJvcmRlci10b3A6IDFweCBzb2xpZCAjY2NjOyBtYXJnaW46IDFlbSAwOyBwYWRkaW5nOiAwO31cblxuaW5wdXQsIHNlbGVjdCB7dmVydGljYWwtYWxpZ246IG1pZGRsZTt9XG5cbnByZSB7XG4gICAgd2hpdGUtc3BhY2U6IHByZTsgLyogQ1NTMiAqL1xuICAgIHdoaXRlLXNwYWNlOiBwcmUtd3JhcDsgLyogQ1NTIDIuMSAqL1xuICAgIHdoaXRlLXNwYWNlOiBwcmUtbGluZTsgLyogQ1NTIDMgKGFuZCAyLjEgYXMgd2VsbCwgYWN0dWFsbHkpICovXG4gICAgd29yZC13cmFwOiBicmVhay13b3JkOyAvKiBJRSAqL1xufVxuXG5pbnB1dFt0eXBlPVwicmFkaW9cIl0ge3ZlcnRpY2FsLWFsaWduOiB0ZXh0LWJvdHRvbTt9XG5pbnB1dFt0eXBlPVwiY2hlY2tib3hcIl0ge3ZlcnRpY2FsLWFsaWduOiBib3R0b207fVxuLmllNyBpbnB1dFt0eXBlPVwiY2hlY2tib3hcIl0ge3ZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTt9XG4uaWU2IGlucHV0IHt2ZXJ0aWNhbC1hbGlnbjogdGV4dC1ib3R0b207fVxuXG5zZWxlY3QsIGlucHV0LCB0ZXh0YXJlYSB7Zm9udDogOTklIHNhbnMtc2VyaWY7fVxuXG50YWJsZSB7Zm9udC1zaXplOiBpbmhlcml0OyBmb250OiAxMDAlO31cblxuc21hbGwge2ZvbnQtc2l6ZTogODUlO31cblxuc3Ryb25nIHtmb250LXdlaWdodDogYm9sZDt9XG5cbnRkLCB0ZCBpbWcge3ZlcnRpY2FsLWFsaWduOiB0b3A7fVxuXG4vKiBNYWtlIHN1cmUgc3VwIGFuZCBzdWIgZG9uJ3QgbWVzcyB3aXRoIHlvdXIgbGluZS1oZWlnaHRzIGh0dHA6Ly9naXN0LmdpdGh1Yi5jb20vNDEzOTMwICovXG5zdWIsIHN1cCB7Zm9udC1zaXplOiA3NSU7IGxpbmUtaGVpZ2h0OiAwOyBwb3NpdGlvbjogcmVsYXRpdmU7fVxuc3VwIHt0b3A6IC0wLjVlbTt9XG5zdWIge2JvdHRvbTogLTAuMjVlbTt9XG5cbi8qIHN0YW5kYXJkaXplIGFueSBtb25vc3BhY2VkIGVsZW1lbnRzICovXG5wcmUsIGNvZGUsIGtiZCwgc2FtcCB7Zm9udC1mYW1pbHk6IG1vbm9zcGFjZSwgc2Fucy1zZXJpZjt9XG5cbi8qIGhhbmQgY3Vyc29yIG9uIGNsaWNrYWJsZSBlbGVtZW50cyAqL1xuLmNsaWNrYWJsZSxcbmxhYmVsLFxuaW5wdXRbdHlwZT1idXR0b25dLFxuaW5wdXRbdHlwZT1zdWJtaXRdLFxuaW5wdXRbdHlwZT1maWxlXSxcbmJ1dHRvbiB7Y3Vyc29yOiBwb2ludGVyO31cblxuLyogV2Via2l0IGJyb3dzZXJzIGFkZCBhIDJweCBtYXJnaW4gb3V0c2lkZSB0aGUgY2hyb21lIG9mIGZvcm0gZWxlbWVudHMgKi9cbmJ1dHRvbiwgaW5wdXQsIHNlbGVjdCwgdGV4dGFyZWEge21hcmdpbjogMDt9XG5cbi8qIG1ha2UgYnV0dG9ucyBwbGF5IG5pY2UgaW4gSUUgKi9cbmJ1dHRvbixcbmlucHV0W3R5cGU9YnV0dG9uXSB7d2lkdGg6IGF1dG87IG92ZXJmbG93OiB2aXNpYmxlO31cblxuLyogc2NhbGUgaW1hZ2VzIGluIElFNyBtb3JlIGF0dHJhY3RpdmVseSAqL1xuLmllNyBpbWcgey1tcy1pbnRlcnBvbGF0aW9uLW1vZGU6IGJpY3ViaWM7fVxuXG4vKiBwcmV2ZW50IEJHIGltYWdlIGZsaWNrZXIgdXBvbiBob3ZlclxuICAgKGNvbW1lbnRlZCBvdXQgYXMgdXNhZ2UgaXMgcmFyZSwgYW5kIHRoZSBmaWx0ZXIgc3ludGF4IG1lc3NlcyB3aXRoIHNvbWUgcHJlLXByb2Nlc3NvcnMpXG4uaWU2IGh0bWwge2ZpbHRlcjogZXhwcmVzc2lvbihkb2N1bWVudC5leGVjQ29tbWFuZChcIkJhY2tncm91bmRJbWFnZUNhY2hlXCIsIGZhbHNlLCB0cnVlKSk7fVxuKi9cblxuLyogbGV0J3MgY2xlYXIgc29tZSBmbG9hdHMgKi9cbi5jbGVhcmZpeDphZnRlciB7IGNvbnRlbnQ6IFwiIFwiOyBkaXNwbGF5OiBibG9jazsgY2xlYXI6IGJvdGg7IH1cbiIsIi8qXG5cdEhUTUw1IFJlc2V0IDo6IHN0eWxlLmNzc1xuXHQtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cdFdlIGhhdmUgbGVhcm5lZCBtdWNoIGZyb20vYmVlbiBpbnNwaXJlZCBieS90YWtlbiBjb2RlIHdoZXJlIG9mZmVyZWQgZnJvbTpcblxuXHRFcmljIE1leWVyXHRcdFx0XHRcdDo6IGh0dHA6Ly9tZXllcndlYi5jb21cblx0SFRNTDUgRG9jdG9yXHRcdFx0XHQ6OiBodHRwOi8vaHRtbDVkb2N0b3IuY29tXG5cdGFuZCB0aGUgSFRNTDUgQm9pbGVycGxhdGVcdDo6IGh0dHA6Ly9odG1sNWJvaWxlcnBsYXRlLmNvbVxuXG4tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cbi8qIExldCdzIGRlZmF1bHQgdGhpcyBwdXBweSBvdXRcbi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuLyogbGluZSAxNSwgc3JjL3Njc3MvX3Jlc2V0LnNjc3MgKi9cbmh0bWwsIGJvZHksIGJvZHkgZGl2LCBzcGFuLCBvYmplY3QsIGlmcmFtZSwgaDEsIGgyLCBoMywgaDQsIGg1LCBoNiwgcCwgYmxvY2txdW90ZSwgcHJlLCBhYmJyLCBhZGRyZXNzLCBjaXRlLCBjb2RlLCBkZWwsIGRmbiwgZW0sIGltZywgaW5zLCBrYmQsIHEsIHNhbXAsIHNtYWxsLCBzdHJvbmcsIHN1Yiwgc3VwLCB2YXIsIGIsIGksIGRsLCBkdCwgZGQsIG9sLCB1bCwgbGksIGZpZWxkc2V0LCBmb3JtLCBsYWJlbCwgbGVnZW5kLCB0YWJsZSwgY2FwdGlvbiwgdGJvZHksIHRmb290LCB0aGVhZCwgdHIsIHRoLCB0ZCwgYXJ0aWNsZSwgYXNpZGUsIGZpZ3VyZSwgZm9vdGVyLCBoZWFkZXIsIG1lbnUsIG5hdiwgc2VjdGlvbiwgdGltZSwgbWFyaywgYXVkaW8sIHZpZGVvLCBkZXRhaWxzLCBzdW1tYXJ5IHtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwO1xuICBib3JkZXI6IDA7XG4gIGZvbnQtc2l6ZTogMTAwJTtcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xuICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcbn1cblxuLyogbGluZSAyNSwgc3JjL3Njc3MvX3Jlc2V0LnNjc3MgKi9cbm1haW4sIGFydGljbGUsIGFzaWRlLCBmaWd1cmUsIGZvb3RlciwgaGVhZGVyLCBuYXYsIHNlY3Rpb24sIGRldGFpbHMsIHN1bW1hcnkge1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuLyogSGFuZGxlIGJveC1zaXppbmcgd2hpbGUgYmV0dGVyIGFkZHJlc3NpbmcgY2hpbGQgZWxlbWVudHM6XG4gICBodHRwOi8vY3NzLXRyaWNrcy5jb20vaW5oZXJpdGluZy1ib3gtc2l6aW5nLXByb2JhYmx5LXNsaWdodGx5LWJldHRlci1iZXN0LXByYWN0aWNlLyAqL1xuLyogbGluZSAyOSwgc3JjL3Njc3MvX3Jlc2V0LnNjc3MgKi9cbmh0bWwge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xufVxuXG4vKiBsaW5lIDMzLCBzcmMvc2Nzcy9fcmVzZXQuc2NzcyAqL1xuKixcbio6YmVmb3JlLFxuKjphZnRlciB7XG4gIGJveC1zaXppbmc6IGluaGVyaXQ7XG59XG5cbi8qIGNvbnNpZGVyIHJlc2V0dGluZyB0aGUgZGVmYXVsdCBjdXJzb3I6IGh0dHBzOi8vZ2lzdC5naXRodWIuY29tL211cnRhdWdoLzUyNDcxNTQgKi9cbi8qIFJlc3BvbnNpdmUgaW1hZ2VzIGFuZCBvdGhlciBlbWJlZGRlZCBvYmplY3RzICovXG4vKiBpZiB5b3UgZG9uJ3QgaGF2ZSBmdWxsIGNvbnRyb2wgb3ZlciBgaW1nYCB0YWdzIChpZiB5b3UgaGF2ZSB0byBvdmVyY29tZSBhdHRyaWJ1dGVzKSwgY29uc2lkZXIgYWRkaW5nIGhlaWdodDogYXV0byAqL1xuLyogbGluZSA0Mywgc3JjL3Njc3MvX3Jlc2V0LnNjc3MgKi9cbmltZyxcbm9iamVjdCxcbmVtYmVkIHtcbiAgbWF4LXdpZHRoOiAxMDAlO1xufVxuXG4vKlxuICAgTm90ZToga2VlcGluZyBJTUcgaGVyZSB3aWxsIGNhdXNlIHByb2JsZW1zIGlmIHlvdSdyZSB1c2luZyBmb3JlZ3JvdW5kIGltYWdlcyBhcyBzcHJpdGVzLlxuXHRJbiBmYWN0LCBpdCAqd2lsbCogY2F1c2UgcHJvYmxlbXMgd2l0aCBHb29nbGUgTWFwcycgY29udHJvbHMgYXQgc21hbGwgc2l6ZS5cblx0SWYgdGhpcyBpcyB0aGUgY2FzZSBmb3IgeW91LCB0cnkgdW5jb21tZW50aW5nIHRoZSBmb2xsb3dpbmc6XG5cbiNtYXAgaW1nIHtcblx0XHRtYXgtd2lkdGg6IG5vbmU7XG59XG4qL1xuLyogZm9yY2UgYSB2ZXJ0aWNhbCBzY3JvbGxiYXIgdG8gcHJldmVudCBhIGp1bXB5IHBhZ2UgKi9cbi8qIGxpbmUgNTgsIHNyYy9zY3NzL19yZXNldC5zY3NzICovXG5odG1sIHtcbiAgb3ZlcmZsb3cteTogc2Nyb2xsO1xufVxuXG4vKiB3ZSB1c2UgYSBsb3Qgb2YgVUxzIHRoYXQgYXJlbid0IGJ1bGxldGVkLlxuXHR5b3UnbGwgaGF2ZSB0byByZXN0b3JlIHRoZSBidWxsZXRzIHdpdGhpbiBjb250ZW50LFxuXHR3aGljaCBpcyBmaW5lIGJlY2F1c2UgdGhleSdyZSBwcm9iYWJseSBjdXN0b21pemVkIGFueXdheSAqL1xuLyogbGluZSA2Mywgc3JjL3Njc3MvX3Jlc2V0LnNjc3MgKi9cbnVsIHtcbiAgbGlzdC1zdHlsZTogbm9uZTtcbn1cblxuLyogbGluZSA2NSwgc3JjL3Njc3MvX3Jlc2V0LnNjc3MgKi9cbmJsb2NrcXVvdGUsIHEge1xuICBxdW90ZXM6IG5vbmU7XG59XG5cbi8qIGxpbmUgNjcsIHNyYy9zY3NzL19yZXNldC5zY3NzICovXG5ibG9ja3F1b3RlOmJlZm9yZSxcbmJsb2NrcXVvdGU6YWZ0ZXIsXG5xOmJlZm9yZSxcbnE6YWZ0ZXIge1xuICBjb250ZW50OiAnJztcbiAgY29udGVudDogbm9uZTtcbn1cblxuLyogbGluZSA3Miwgc3JjL3Njc3MvX3Jlc2V0LnNjc3MgKi9cbmEge1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDA7XG4gIGZvbnQtc2l6ZTogMTAwJTtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xuICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcbn1cblxuLyogbGluZSA3NCwgc3JjL3Njc3MvX3Jlc2V0LnNjc3MgKi9cbmRlbCB7XG4gIHRleHQtZGVjb3JhdGlvbjogbGluZS10aHJvdWdoO1xufVxuXG4vKiBsaW5lIDc2LCBzcmMvc2Nzcy9fcmVzZXQuc2NzcyAqL1xuYWJiclt0aXRsZV0sIGRmblt0aXRsZV0ge1xuICBib3JkZXItYm90dG9tOiAxcHggZG90dGVkICMwMDA7XG4gIGN1cnNvcjogaGVscDtcbn1cblxuLyogdGFibGVzIHN0aWxsIG5lZWQgY2VsbHNwYWNpbmc9XCIwXCIgaW4gdGhlIG1hcmt1cCAqL1xuLyogbGluZSA3OSwgc3JjL3Njc3MvX3Jlc2V0LnNjc3MgKi9cbnRhYmxlIHtcbiAgYm9yZGVyLWNvbGxhcHNlOiBzZXBhcmF0ZTtcbiAgYm9yZGVyLXNwYWNpbmc6IDA7XG59XG5cbi8qIGxpbmUgODAsIHNyYy9zY3NzL19yZXNldC5zY3NzICovXG50aCB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xuICB2ZXJ0aWNhbC1hbGlnbjogYm90dG9tO1xufVxuXG4vKiBsaW5lIDgxLCBzcmMvc2Nzcy9fcmVzZXQuc2NzcyAqL1xudGQge1xuICBmb250LXdlaWdodDogbm9ybWFsO1xuICB2ZXJ0aWNhbC1hbGlnbjogdG9wO1xufVxuXG4vKiBsaW5lIDgzLCBzcmMvc2Nzcy9fcmVzZXQuc2NzcyAqL1xuaHIge1xuICBkaXNwbGF5OiBibG9jaztcbiAgaGVpZ2h0OiAxcHg7XG4gIGJvcmRlcjogMDtcbiAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICNjY2M7XG4gIG1hcmdpbjogMWVtIDA7XG4gIHBhZGRpbmc6IDA7XG59XG5cbi8qIGxpbmUgODUsIHNyYy9zY3NzL19yZXNldC5zY3NzICovXG5pbnB1dCwgc2VsZWN0IHtcbiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbn1cblxuLyogbGluZSA4Nywgc3JjL3Njc3MvX3Jlc2V0LnNjc3MgKi9cbnByZSB7XG4gIHdoaXRlLXNwYWNlOiBwcmU7XG4gIC8qIENTUzIgKi9cbiAgd2hpdGUtc3BhY2U6IHByZS13cmFwO1xuICAvKiBDU1MgMi4xICovXG4gIHdoaXRlLXNwYWNlOiBwcmUtbGluZTtcbiAgLyogQ1NTIDMgKGFuZCAyLjEgYXMgd2VsbCwgYWN0dWFsbHkpICovXG4gIHdvcmQtd3JhcDogYnJlYWstd29yZDtcbiAgLyogSUUgKi9cbn1cblxuLyogbGluZSA5NCwgc3JjL3Njc3MvX3Jlc2V0LnNjc3MgKi9cbmlucHV0W3R5cGU9XCJyYWRpb1wiXSB7XG4gIHZlcnRpY2FsLWFsaWduOiB0ZXh0LWJvdHRvbTtcbn1cblxuLyogbGluZSA5NSwgc3JjL3Njc3MvX3Jlc2V0LnNjc3MgKi9cbmlucHV0W3R5cGU9XCJjaGVja2JveFwiXSB7XG4gIHZlcnRpY2FsLWFsaWduOiBib3R0b207XG59XG5cbi8qIGxpbmUgOTYsIHNyYy9zY3NzL19yZXNldC5zY3NzICovXG4uaWU3IGlucHV0W3R5cGU9XCJjaGVja2JveFwiXSB7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcbn1cblxuLyogbGluZSA5Nywgc3JjL3Njc3MvX3Jlc2V0LnNjc3MgKi9cbi5pZTYgaW5wdXQge1xuICB2ZXJ0aWNhbC1hbGlnbjogdGV4dC1ib3R0b207XG59XG5cbi8qIGxpbmUgOTksIHNyYy9zY3NzL19yZXNldC5zY3NzICovXG5zZWxlY3QsIGlucHV0LCB0ZXh0YXJlYSB7XG4gIGZvbnQ6IDk5JSBzYW5zLXNlcmlmO1xufVxuXG4vKiBsaW5lIDEwMSwgc3JjL3Njc3MvX3Jlc2V0LnNjc3MgKi9cbnRhYmxlIHtcbiAgZm9udC1zaXplOiBpbmhlcml0O1xuICBmb250OiAxMDAlO1xufVxuXG4vKiBsaW5lIDEwMywgc3JjL3Njc3MvX3Jlc2V0LnNjc3MgKi9cbnNtYWxsIHtcbiAgZm9udC1zaXplOiA4NSU7XG59XG5cbi8qIGxpbmUgMTA1LCBzcmMvc2Nzcy9fcmVzZXQuc2NzcyAqL1xuc3Ryb25nIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG5cbi8qIGxpbmUgMTA3LCBzcmMvc2Nzcy9fcmVzZXQuc2NzcyAqL1xudGQsIHRkIGltZyB7XG4gIHZlcnRpY2FsLWFsaWduOiB0b3A7XG59XG5cbi8qIE1ha2Ugc3VyZSBzdXAgYW5kIHN1YiBkb24ndCBtZXNzIHdpdGggeW91ciBsaW5lLWhlaWdodHMgaHR0cDovL2dpc3QuZ2l0aHViLmNvbS80MTM5MzAgKi9cbi8qIGxpbmUgMTEwLCBzcmMvc2Nzcy9fcmVzZXQuc2NzcyAqL1xuc3ViLCBzdXAge1xuICBmb250LXNpemU6IDc1JTtcbiAgbGluZS1oZWlnaHQ6IDA7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cblxuLyogbGluZSAxMTEsIHNyYy9zY3NzL19yZXNldC5zY3NzICovXG5zdXAge1xuICB0b3A6IC0wLjVlbTtcbn1cblxuLyogbGluZSAxMTIsIHNyYy9zY3NzL19yZXNldC5zY3NzICovXG5zdWIge1xuICBib3R0b206IC0wLjI1ZW07XG59XG5cbi8qIHN0YW5kYXJkaXplIGFueSBtb25vc3BhY2VkIGVsZW1lbnRzICovXG4vKiBsaW5lIDExNSwgc3JjL3Njc3MvX3Jlc2V0LnNjc3MgKi9cbnByZSwgY29kZSwga2JkLCBzYW1wIHtcbiAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZSwgc2Fucy1zZXJpZjtcbn1cblxuLyogaGFuZCBjdXJzb3Igb24gY2xpY2thYmxlIGVsZW1lbnRzICovXG4vKiBsaW5lIDExOCwgc3JjL3Njc3MvX3Jlc2V0LnNjc3MgKi9cbi5jbGlja2FibGUsXG5sYWJlbCxcbmlucHV0W3R5cGU9YnV0dG9uXSxcbmlucHV0W3R5cGU9c3VibWl0XSxcbmlucHV0W3R5cGU9ZmlsZV0sXG5idXR0b24ge1xuICBjdXJzb3I6IHBvaW50ZXI7XG59XG5cbi8qIFdlYmtpdCBicm93c2VycyBhZGQgYSAycHggbWFyZ2luIG91dHNpZGUgdGhlIGNocm9tZSBvZiBmb3JtIGVsZW1lbnRzICovXG4vKiBsaW5lIDEyNiwgc3JjL3Njc3MvX3Jlc2V0LnNjc3MgKi9cbmJ1dHRvbiwgaW5wdXQsIHNlbGVjdCwgdGV4dGFyZWEge1xuICBtYXJnaW46IDA7XG59XG5cbi8qIG1ha2UgYnV0dG9ucyBwbGF5IG5pY2UgaW4gSUUgKi9cbi8qIGxpbmUgMTI5LCBzcmMvc2Nzcy9fcmVzZXQuc2NzcyAqL1xuYnV0dG9uLFxuaW5wdXRbdHlwZT1idXR0b25dIHtcbiAgd2lkdGg6IGF1dG87XG4gIG92ZXJmbG93OiB2aXNpYmxlO1xufVxuXG4vKiBzY2FsZSBpbWFnZXMgaW4gSUU3IG1vcmUgYXR0cmFjdGl2ZWx5ICovXG4vKiBsaW5lIDEzMywgc3JjL3Njc3MvX3Jlc2V0LnNjc3MgKi9cbi5pZTcgaW1nIHtcbiAgLW1zLWludGVycG9sYXRpb24tbW9kZTogYmljdWJpYztcbn1cblxuLyogcHJldmVudCBCRyBpbWFnZSBmbGlja2VyIHVwb24gaG92ZXJcbiAgIChjb21tZW50ZWQgb3V0IGFzIHVzYWdlIGlzIHJhcmUsIGFuZCB0aGUgZmlsdGVyIHN5bnRheCBtZXNzZXMgd2l0aCBzb21lIHByZS1wcm9jZXNzb3JzKVxuLmllNiBodG1sIHtmaWx0ZXI6IGV4cHJlc3Npb24oZG9jdW1lbnQuZXhlY0NvbW1hbmQoXCJCYWNrZ3JvdW5kSW1hZ2VDYWNoZVwiLCBmYWxzZSwgdHJ1ZSkpO31cbiovXG4vKiBsZXQncyBjbGVhciBzb21lIGZsb2F0cyAqL1xuLyogbGluZSAxNDEsIHNyYy9zY3NzL19yZXNldC5zY3NzICovXG4uY2xlYXJmaXg6YWZ0ZXIge1xuICBjb250ZW50OiBcIiBcIjtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGNsZWFyOiBib3RoO1xufVxuXG4vKiBsaW5lIDMsIHNyYy9zY3NzL19ncmlkLnNjc3MgKi9cbi5jb250YWluZXIge1xuICB3aWR0aDogMTAwJTtcbiAgbWF4LXdpZHRoOiAxMjAwcHg7XG4gIG1hcmdpbjogMCBhdXRvO1xufVxuXG4vKiBsaW5lIDEwLCBzcmMvc2Nzcy9fZ3JpZC5zY3NzICovXG4uY29udGFpbmVyIC5yb3c6OmJlZm9yZSwgLmNvbnRhaW5lciAucm93OjphZnRlciB7XG4gIGNvbnRlbnQ6IFwiXCI7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBoZWlnaHQ6IDA7XG4gIHZpc2liaWxpdHk6IGhpZGRlbjtcbiAgY2xlYXI6IGJvdGg7XG59XG5cbi8qIGxpbmUgMTksIHNyYy9zY3NzL19ncmlkLnNjc3MgKi9cbi5jb250YWluZXIgW2NsYXNzKj0nY29sLSddIHtcbiAgd2lkdGg6IDEwMCU7XG4gIG1pbi1oZWlnaHQ6IDFweDtcbiAgZmxvYXQ6IG5vbmU7XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiA2NDBweCkge1xuICAvKiBsaW5lIDI2LCBzcmMvc2Nzcy9fZ3JpZC5zY3NzICovXG4gIC5jb250YWluZXIgW2NsYXNzKj0nY29sLSddIHtcbiAgICBmbG9hdDogbGVmdDtcbiAgfVxuICAvKiBsaW5lIDMxLCBzcmMvc2Nzcy9fZ3JpZC5zY3NzICovXG4gIC5jb250YWluZXIgLmNvbC0xIHtcbiAgICB3aWR0aDogMTUwcHg7XG4gIH1cbiAgLyogbGluZSAzMSwgc3JjL3Njc3MvX2dyaWQuc2NzcyAqL1xuICAuY29udGFpbmVyIC5jb2wtMiB7XG4gICAgd2lkdGg6IDMwMHB4O1xuICB9XG4gIC8qIGxpbmUgMzEsIHNyYy9zY3NzL19ncmlkLnNjc3MgKi9cbiAgLmNvbnRhaW5lciAuY29sLTMge1xuICAgIHdpZHRoOiA0NTBweDtcbiAgfVxuICAvKiBsaW5lIDMxLCBzcmMvc2Nzcy9fZ3JpZC5zY3NzICovXG4gIC5jb250YWluZXIgLmNvbC00IHtcbiAgICB3aWR0aDogNjAwcHg7XG4gIH1cbiAgLyogbGluZSAzMSwgc3JjL3Njc3MvX2dyaWQuc2NzcyAqL1xuICAuY29udGFpbmVyIC5jb2wtNSB7XG4gICAgd2lkdGg6IDc1MHB4O1xuICB9XG4gIC8qIGxpbmUgMzEsIHNyYy9zY3NzL19ncmlkLnNjc3MgKi9cbiAgLmNvbnRhaW5lciAuY29sLTYge1xuICAgIHdpZHRoOiA5MDBweDtcbiAgfVxuICAvKiBsaW5lIDMxLCBzcmMvc2Nzcy9fZ3JpZC5zY3NzICovXG4gIC5jb250YWluZXIgLmNvbC03IHtcbiAgICB3aWR0aDogMTA1MHB4O1xuICB9XG4gIC8qIGxpbmUgMzEsIHNyYy9zY3NzL19ncmlkLnNjc3MgKi9cbiAgLmNvbnRhaW5lciAuY29sLTgge1xuICAgIHdpZHRoOiAxMjAwcHg7XG4gIH1cbn1cblxuLyogbGluZSAyLCBzcmMvc2Nzcy9fbmF2aWdhdGlvbi5zY3NzICovXG5oZWFkZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbn1cblxuLyogbGluZSA0LCBzcmMvc2Nzcy9fbmF2aWdhdGlvbi5zY3NzICovXG5oZWFkZXIgLmxvZ28ge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbn1cblxuLyogbGluZSA3LCBzcmMvc2Nzcy9fbmF2aWdhdGlvbi5zY3NzICovXG5oZWFkZXIgLmxvZ28gaW1nIHtcbiAgd2lkdGg6IDIwMHB4O1xuICBoZWlnaHQ6IDIwMHB4O1xufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogNjQwcHgpIHtcbiAgLyogbGluZSA3LCBzcmMvc2Nzcy9fbmF2aWdhdGlvbi5zY3NzICovXG4gIGhlYWRlciAubG9nbyBpbWcge1xuICAgIGZsZXgtd3JhcDogbm93cmFwO1xuICAgIHdpZHRoOiAzMDBweDtcbiAgICBoZWlnaHQ6IDMwMHB4O1xuICB9XG59XG5cbi8qIGxpbmUgMTksIHNyYy9zY3NzL19uYXZpZ2F0aW9uLnNjc3MgKi9cbm5hdi5tZW51IHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC13cmFwOiB3cmFwO1xuICBhbGlnbi1jb250ZW50OiBjZW50ZXI7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4vKiBsaW5lIDI1LCBzcmMvc2Nzcy9fbmF2aWdhdGlvbi5zY3NzICovXG5uYXYubWVudSB1bCB7XG4gIHdpZHRoOiA5NSU7XG4gIG1hcmdpbjogMCBhdXRvO1xufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogNjQwcHgpIHtcbiAgLyogbGluZSAyNSwgc3JjL3Njc3MvX25hdmlnYXRpb24uc2NzcyAqL1xuICBuYXYubWVudSB1bCB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LXdyYXA6IG5vd3JhcDtcbiAgICB3aWR0aDogMTAwJTtcbiAgfVxufVxuXG4vKiBsaW5lIDM0LCBzcmMvc2Nzcy9fbmF2aWdhdGlvbi5zY3NzICovXG5uYXYubWVudSB1bCBsaSB7XG4gIGZvbnQtc2l6ZTogMTZweDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBib3JkZXI6IDJweCBzb2xpZCB0cmFuc3BhcmVudDtcbiAgYm9yZGVyLXRvcC1jb2xvcjogcGluaztcbiAgYm9yZGVyLWJvdHRvbS1jb2xvcjogcGluaztcbiAgcGFkZGluZzogMSU7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIG1hcmdpbi1ib3R0b206IDElO1xufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogNjQwcHgpIHtcbiAgLyogbGluZSAzNCwgc3JjL3Njc3MvX25hdmlnYXRpb24uc2NzcyAqL1xuICBuYXYubWVudSB1bCBsaSB7XG4gICAgZm9udC1zaXplOiAxOHB4O1xuICAgIHdpZHRoOiBjYWxjKDEyMDBweCAvIDYpO1xuICAgIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gICAgYm9yZGVyLWxlZnQtY29sb3I6IHBpbms7XG4gICAgYm9yZGVyLXJpZ2h0LWNvbG9yOiBwaW5rO1xuICB9XG4gIC8qIGxpbmUgNTIsIHNyYy9zY3NzL19uYXZpZ2F0aW9uLnNjc3MgKi9cbiAgbmF2Lm1lbnUgdWwgbGk6Zmlyc3Qtb2YtdHlwZSB7XG4gICAgYm9yZGVyLWxlZnQtd2lkdGg6IDRweDtcbiAgfVxuICAvKiBsaW5lIDU1LCBzcmMvc2Nzcy9fbmF2aWdhdGlvbi5zY3NzICovXG4gIG5hdi5tZW51IHVsIGxpOmxhc3Qtb2YtdHlwZSB7XG4gICAgYm9yZGVyLXJpZ2h0LXdpZHRoOiA0cHg7XG4gIH1cbn1cblxuLyogbGluZSA2MCwgc3JjL3Njc3MvX25hdmlnYXRpb24uc2NzcyAqL1xubmF2Lm1lbnUgdWwgbGkgYSB7XG4gIGNvbG9yOiBibGFjaztcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICBtYXJnaW4tYm90dG9tOiAxJTtcbn1cblxuLyogbGluZSAzLCBzcmMvc2Nzcy9fc2xpZGVyLnNjc3MgKi9cbi5zbGlkZXJfd3JhcGVyIHtcbiAgYm9yZGVyOiAxcHggc29saWQgcmVkO1xuICBvdmVyZmxvdzogaGlkZGVuO1xufVxuXG4vKiBsaW5lIDcsIHNyYy9zY3NzL19zbGlkZXIuc2NzcyAqL1xuLnNsaWRlcl93cmFwZXIgLnNsaWRlciB7XG4gIGRpc3BsYXk6IGZsZXg7XG59XG5cbi8qIGxpbmUgOSwgc3JjL3Njc3MvX3NsaWRlci5zY3NzICovXG4uc2xpZGVyX3dyYXBlciAuc2xpZGVyIGxpIHtcbiAgd2lkdGg6IDEwMCU7XG4gIGZsb2F0OiBsZWZ0O1xufVxuIiwiQGltcG9ydCAndmFyaWFibGVzJztcblxuLmNvbnRhaW5lcntcblxuICAgIHdpZHRoOiAxMDAlO1xuICAgIG1heC13aWR0aDogJGdyaWQtY29udGFpbmVyLXdpZHRoO1xuICAgIG1hcmdpbjogMCBhdXRvO1xuXG4gICAgLnJvd3tcbiAgICAgICAgJjo6YmVmb3JlLCAmOjphZnRlciB7XG4gICAgICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICBoZWlnaHQ6IDA7XG4gICAgICAgIHZpc2liaWxpdHk6IGhpZGRlbjtcbiAgICAgICAgY2xlYXI6IGJvdGg7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBbY2xhc3MqPSdjb2wtJ117IC8vbW9iaWxlIGZpcnN0OyBhZnRlciA2NDBweCBjb2x1bW5zIHdpdGggd2lsbCBiZSBhZGp1c3QgYWNjb3JkaW5nIHRvIGJlbG93IGZ1bmN0aW9uXG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICBtaW4taGVpZ2h0OiAxcHg7XG4gICAgICAgIGZsb2F0OiBub25lO1xuICAgIH1cblxuICAgIEBtZWRpYSAjeyRicmVha3BvaW50fSB7IFxuICAgICAgICBbY2xhc3MqPSdjb2wtJ117XG4gICAgICAgICAgICBmbG9hdDogbGVmdDtcbiAgICAgICAgfVxuICAgICAgICAvL2ZuIGZvciBjcmVhdGluZ1xuICAgICAgICBAZm9yICRpIGZyb20gMSB0aHJvdWdoICRncmlkLWNvbHVtbnN7XG5cdFx0XHQuY29sLSN7JGl9IHtcblx0XHRcdFx0d2lkdGg6ICRncmlkLWNvbHVtbi13aWR0aCAqICRpO1xuXHRcdFx0fVxuXHRcdH1cbiAgICB9ICAgIFxufVxuIiwiJGdyaWQtY29sdW1uczogODtcbiRncmlkLWNvbnRhaW5lci13aWR0aDogMTIwMHB4O1xuJGdyaWQtY29sdW1uLXdpZHRoOiAkZ3JpZC1jb250YWluZXItd2lkdGggLyAkZ3JpZC1jb2x1bW5zO1xuJGJyZWFrcG9pbnQ6IChtaW4td2lkdGg6IDY0MHB4KTsiLCJAaW1wb3J0ICd2YXJpYWJsZXMnO1xuaGVhZGVyIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbiAgICAubG9nbyB7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgICAgICBpbWcge1xuICAgICAgICAgICAgd2lkdGg6IDIwMHB4O1xuICAgICAgICAgICAgaGVpZ2h0OiAyMDBweDtcbiAgICAgICAgICAgIEBtZWRpYSAjeyRicmVha3BvaW50fSB7XG4gICAgICAgICAgICAgICAgZmxleC13cmFwOiBub3dyYXA7XG4gICAgICAgICAgICAgICAgd2lkdGg6IDMwMHB4O1xuICAgICAgICAgICAgICAgIGhlaWdodDogMzAwcHg7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG59XG5cbm5hdi5tZW51IHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtd3JhcDogd3JhcDtcbiAgICBhbGlnbi1jb250ZW50OiBjZW50ZXI7XG4gICAgd2lkdGg6IDEwMCU7XG4gICBcbiAgICB1bHtcbiAgICAgICAgd2lkdGg6IDk1JTtcbiAgICAgICAgbWFyZ2luOiAwIGF1dG87XG4gICAgICAgIEBtZWRpYSAjeyRicmVha3BvaW50fSB7XG4gICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgICAgZmxleC13cmFwOiBub3dyYXA7XG4gICAgICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgfSAgXG5cbiAgICAgICAgbGkge1xuICAgICAgICBmb250LXNpemU6IDE2cHg7XG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgYm9yZGVyOiAycHggc29saWQgdHJhbnNwYXJlbnQ7XG4gICAgICAgIGJvcmRlci10b3AtY29sb3I6IHBpbms7XG4gICAgICAgIGJvcmRlci1ib3R0b20tY29sb3I6IHBpbms7XG5cbiAgICAgICAgcGFkZGluZzogMSU7XG4gICAgICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gICAgICAgIG1hcmdpbi1ib3R0b206IDElO1xuXG4gICAgICAgICAgICBAbWVkaWEgI3skYnJlYWtwb2ludH0ge1xuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMThweDtcbiAgICAgICAgICAgICAgICB3aWR0aDogY2FsYygjeyRncmlkLWNvbnRhaW5lci13aWR0aH0gLyA2KTtcbiAgICAgICAgICAgICAgICBib3JkZXItY29sb3I6IHRyYW5zcGFyZW50O1xuICAgICAgICAgICAgICAgIGJvcmRlci1sZWZ0LWNvbG9yOiBwaW5rO1xuICAgICAgICAgICAgICAgIGJvcmRlci1yaWdodC1jb2xvcjogcGluaztcblxuICAgICAgICAgICAgICAgICY6Zmlyc3Qtb2YtdHlwZXtcbiAgICAgICAgICAgICAgICAgICAgYm9yZGVyLWxlZnQtd2lkdGg6IDRweDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgJjpsYXN0LW9mLXR5cGV7XG4gICAgICAgICAgICAgICAgICAgIGJvcmRlci1yaWdodC13aWR0aDogNHB4O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgYXsgXG4gICAgICAgICAgICAgICAgY29sb3I6IGJsYWNrO1xuICAgICAgICAgICAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICAgICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAxJTtcblxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuXG59XG4iLCJAaW1wb3J0ICd2YXJpYWJsZXMnO1xuXG4uc2xpZGVyX3dyYXBlcntcbiAgICBib3JkZXI6IDFweCBzb2xpZCByZWQ7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcblxuICAgIC5zbGlkZXJ7XG4gICAgICAgIGRpc3BsYXk6ZmxleDtcbiAgICAgICAgbGl7XG4gICAgICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgICAgIGZsb2F0OiBsZWZ0O1xuICAgICAgICB9XG4gICAgfVxufSJdfQ== */

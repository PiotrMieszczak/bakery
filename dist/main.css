/*
	HTML5 Reset :: style.css
	----------------------------------------------------------
	We have learned much from/been inspired by/taken code where offered from:

	Eric Meyer					:: http://meyerweb.com
	HTML5 Doctor				:: http://html5doctor.com
	and the HTML5 Boilerplate	:: http://html5boilerplate.com

-------------------------------------------------------------------------------*/
/* Let's default this puppy out
-------------------------------------------------------------------------------*/
/* line 15, src/scss/_reset.scss */
html, body, body div, span, object, iframe, h1, h2, h3, h4, h5, h6, p, blockquote, pre, abbr, address, cite, code, del, dfn, em, img, ins, kbd, q, samp, small, strong, sub, sup, var, b, i, dl, dt, dd, ol, ul, li, fieldset, form, label, legend, table, caption, tbody, tfoot, thead, tr, th, td, article, aside, figure, footer, header, menu, nav, section, time, mark, audio, video, details, summary {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font-weight: normal;
  vertical-align: baseline;
  background: transparent;
}

/* line 25, src/scss/_reset.scss */
main, article, aside, figure, footer, header, nav, section, details, summary {
  display: block;
}

/* Handle box-sizing while better addressing child elements:
   http://css-tricks.com/inheriting-box-sizing-probably-slightly-better-best-practice/ */
/* line 29, src/scss/_reset.scss */
html {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
}

/* line 33, src/scss/_reset.scss */
*,
*:before,
*:after {
  -webkit-box-sizing: inherit;
          box-sizing: inherit;
}

/* consider resetting the default cursor: https://gist.github.com/murtaugh/5247154 */
/* Responsive images and other embedded objects */
/* if you don't have full control over `img` tags (if you have to overcome attributes), consider adding height: auto */
/* line 43, src/scss/_reset.scss */
img,
object,
embed {
  max-width: 100%;
}

/*
   Note: keeping IMG here will cause problems if you're using foreground images as sprites.
	In fact, it *will* cause problems with Google Maps' controls at small size.
	If this is the case for you, try uncommenting the following:

#map img {
		max-width: none;
}
*/
/* force a vertical scrollbar to prevent a jumpy page */
/* line 58, src/scss/_reset.scss */
html {
  overflow-y: scroll;
}

/* we use a lot of ULs that aren't bulleted.
	you'll have to restore the bullets within content,
	which is fine because they're probably customized anyway */
/* line 63, src/scss/_reset.scss */
ul {
  list-style: none;
}

/* line 65, src/scss/_reset.scss */
blockquote, q {
  quotes: none;
}

/* line 67, src/scss/_reset.scss */
blockquote:before,
blockquote:after,
q:before,
q:after {
  content: '';
  content: none;
}

/* line 72, src/scss/_reset.scss */
a {
  margin: 0;
  padding: 0;
  font-size: 100%;
  vertical-align: baseline;
  background: transparent;
}

/* line 74, src/scss/_reset.scss */
del {
  text-decoration: line-through;
}

/* line 76, src/scss/_reset.scss */
abbr[title], dfn[title] {
  border-bottom: 1px dotted #000;
  cursor: help;
}

/* tables still need cellspacing="0" in the markup */
/* line 79, src/scss/_reset.scss */
table {
  border-collapse: separate;
  border-spacing: 0;
}

/* line 80, src/scss/_reset.scss */
th {
  font-weight: bold;
  vertical-align: bottom;
}

/* line 81, src/scss/_reset.scss */
td {
  font-weight: normal;
  vertical-align: top;
}

/* line 83, src/scss/_reset.scss */
hr {
  display: block;
  height: 1px;
  border: 0;
  border-top: 1px solid #ccc;
  margin: 1em 0;
  padding: 0;
}

/* line 85, src/scss/_reset.scss */
input, select {
  vertical-align: middle;
}

/* line 87, src/scss/_reset.scss */
pre {
  white-space: pre;
  /* CSS2 */
  white-space: pre-wrap;
  /* CSS 2.1 */
  white-space: pre-line;
  /* CSS 3 (and 2.1 as well, actually) */
  word-wrap: break-word;
  /* IE */
}

/* line 94, src/scss/_reset.scss */
input[type="radio"] {
  vertical-align: text-bottom;
}

/* line 95, src/scss/_reset.scss */
input[type="checkbox"] {
  vertical-align: bottom;
}

/* line 96, src/scss/_reset.scss */
.ie7 input[type="checkbox"] {
  vertical-align: baseline;
}

/* line 97, src/scss/_reset.scss */
.ie6 input {
  vertical-align: text-bottom;
}

/* line 99, src/scss/_reset.scss */
select, input, textarea {
  font: 99% sans-serif;
}

/* line 101, src/scss/_reset.scss */
table {
  font-size: inherit;
  font: 100%;
}

/* line 103, src/scss/_reset.scss */
small {
  font-size: 85%;
}

/* line 105, src/scss/_reset.scss */
strong {
  font-weight: bold;
}

/* line 107, src/scss/_reset.scss */
td, td img {
  vertical-align: top;
}

/* Make sure sup and sub don't mess with your line-heights http://gist.github.com/413930 */
/* line 110, src/scss/_reset.scss */
sub, sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
}

/* line 111, src/scss/_reset.scss */
sup {
  top: -0.5em;
}

/* line 112, src/scss/_reset.scss */
sub {
  bottom: -0.25em;
}

/* standardize any monospaced elements */
/* line 115, src/scss/_reset.scss */
pre, code, kbd, samp {
  font-family: monospace, sans-serif;
}

/* hand cursor on clickable elements */
/* line 118, src/scss/_reset.scss */
.clickable,
label,
input[type=button],
input[type=submit],
input[type=file],
button {
  cursor: pointer;
}

/* Webkit browsers add a 2px margin outside the chrome of form elements */
/* line 126, src/scss/_reset.scss */
button, input, select, textarea {
  margin: 0;
}

/* make buttons play nice in IE */
/* line 129, src/scss/_reset.scss */
button,
input[type=button] {
  width: auto;
  overflow: visible;
}

/* scale images in IE7 more attractively */
/* line 133, src/scss/_reset.scss */
.ie7 img {
  -ms-interpolation-mode: bicubic;
}

/* prevent BG image flicker upon hover
   (commented out as usage is rare, and the filter syntax messes with some pre-processors)
.ie6 html {filter: expression(document.execCommand("BackgroundImageCache", false, true));}
*/
/* let's clear some floats */
/* line 141, src/scss/_reset.scss */
.clearfix:after {
  content: " ";
  display: block;
  clear: both;
}

/* line 3, src/scss/_grid.scss */
.container {
  width: 100% !important;
  max-width: 1200px;
  margin: 0 auto;
}

/* line 10, src/scss/_grid.scss */
.container .row::before, .container .row::after {
  content: "";
  display: block;
  height: 0;
  visibility: hidden;
  clear: both;
}

/* line 19, src/scss/_grid.scss */
.container [class*='col-'] {
  width: 100%;
  min-height: 1px;
  float: none;
}

@media (min-width: 640px) {
  /* line 26, src/scss/_grid.scss */
  .container [class*='col-'] {
    float: left;
  }
  /* line 31, src/scss/_grid.scss */
  .container .col-1 {
    width: 12.5%;
  }
  /* line 31, src/scss/_grid.scss */
  .container .col-2 {
    width: 25%;
  }
  /* line 31, src/scss/_grid.scss */
  .container .col-3 {
    width: 37.5%;
  }
  /* line 31, src/scss/_grid.scss */
  .container .col-4 {
    width: 50%;
  }
  /* line 31, src/scss/_grid.scss */
  .container .col-5 {
    width: 62.5%;
  }
  /* line 31, src/scss/_grid.scss */
  .container .col-6 {
    width: 75%;
  }
  /* line 31, src/scss/_grid.scss */
  .container .col-7 {
    width: 87.5%;
  }
  /* line 31, src/scss/_grid.scss */
  .container .col-8 {
    width: 100%;
  }
}

/* line 3, src/scss/_mobileMenu.scss */
.mobile {
  font-size: 40px;
  color: pink;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: start;
      -ms-flex-pack: start;
          justify-content: flex-start;
}

/* line 9, src/scss/_mobileMenu.scss */
.mobile i {
  margin-left: 2%;
  margin-top: 2%;
}

@media (min-width: 640px) {
  /* line 3, src/scss/_mobileMenu.scss */
  .mobile {
    display: none;
  }
}

/* line 2, src/scss/_navigation.scss */
header {
  background-color: white;
}

/* line 4, src/scss/_navigation.scss */
header .logo {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
}

/* line 8, src/scss/_navigation.scss */
header .logo img {
  width: 200px;
  height: 200px;
}

@media (min-width: 640px) {
  /* line 8, src/scss/_navigation.scss */
  header .logo img {
    -ms-flex-wrap: nowrap;
        flex-wrap: nowrap;
    width: 300px;
    height: 300px;
  }
}

/* line 20, src/scss/_navigation.scss */
nav.menu {
  width: 100%;
  display: none;
}

@media (min-width: 640px) {
  /* line 20, src/scss/_navigation.scss */
  nav.menu {
    display: block;
  }
}

/* line 27, src/scss/_navigation.scss */
nav.menu ul {
  width: 100%;
}

@media (min-width: 640px) {
  /* line 27, src/scss/_navigation.scss */
  nav.menu ul {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
  }
}

/* line 32, src/scss/_navigation.scss */
nav.menu ul li {
  font-size: 16px;
  text-align: center;
  border: 2px solid transparent;
  border-bottom-color: pink;
  padding: 1%;
  text-transform: uppercase;
  margin-bottom: 1%;
}

@media (min-width: 640px) {
  /* line 32, src/scss/_navigation.scss */
  nav.menu ul li {
    font-size: 18px;
    width: 16.66%;
    border-color: transparent;
    border-left-color: pink;
    border-right-color: pink;
    display: inline-block;
  }
  /* line 51, src/scss/_navigation.scss */
  nav.menu ul li:nth-of-type(2n) {
    border-color: transparent;
  }
  /* line 54, src/scss/_navigation.scss */
  nav.menu ul li:nth-of-type(6) {
    border-right-color: pink;
  }
}

/* line 59, src/scss/_navigation.scss */
nav.menu ul li a {
  color: black;
  text-decoration: none;
  margin-bottom: 1%;
}

/* line 3, src/scss/_slider.scss */
.sliderWraper {
  overflow: hidden;
  width: 100%;
}

/* line 8, src/scss/_slider.scss */
.sliderWraper .slider {
  display: block;
  width: 400%;
}

/* line 13, src/scss/_slider.scss */
.sliderWraper .slider div {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  text-transform: uppercase;
  width: 25%;
  height: 30vh;
  float: left;
  background-repeat: no-repeat;
  background-position: center;
  background-size: cover;
}

/* line 28, src/scss/_slider.scss */
.sliderWraper .slider div.sliderText {
  height: 100px;
  width: 200px;
  color: white;
  font-size: 18px;
  -ms-flex-item-align: center;
      align-self: center;
  text-align: center;
  background-color: rgba(0, 0, 0, 0.6);
}

@media (min-width: 640px) {
  /* line 28, src/scss/_slider.scss */
  .sliderWraper .slider div.sliderText {
    height: 200px;
    width: 400px;
    font-size: 26px;
    padding: 1%;
  }
}

@media (min-width: 640px) {
  /* line 13, src/scss/_slider.scss */
  .sliderWraper .slider div {
    height: 400px;
  }
}

/* line 50, src/scss/_slider.scss */
.sliderWraper .slider div.sliderImg1 {
  background-image: url("../images/slider1.jpg");
}

/* line 53, src/scss/_slider.scss */
.sliderWraper .slider div.sliderImg2 {
  background-image: url("../images/slider2.jpg");
}

/* line 56, src/scss/_slider.scss */
.sliderWraper .slider div.sliderImg3 {
  background-image: url("../images/slider3.jpg");
}

/* line 5, src/scss/_aboutUs.scss */
#aboutUs .aboutUs_desc {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  padding: 5%;
  letter-spacing: 1px;
}

/* line 11, src/scss/_aboutUs.scss */
#aboutUs .aboutUs_desc h1 {
  margin-bottom: 1%;
  text-transform: uppercase;
  font-size: 2em;
}

/* line 17, src/scss/_aboutUs.scss */
#aboutUs .aboutUs_desc p {
  font-size: 1em;
}

/* line 22, src/scss/_aboutUs.scss */
#aboutUs .aboutUs_pic {
  padding: 5%;
}

/* line 25, src/scss/_aboutUs.scss */
#aboutUs .aboutUs_pic .aboutUs_img {
  background-image: url("../images/about.jpg");
  background-repeat: no-repeat;
  background-size: cover;
  width: 498px;
  height: 373px;
}

/* line 8, src/scss/main.scss */
* {
  font-family: 'Source Code Pro', monospace;
}

/* line 11, src/scss/main.scss */
.sticky {
  position: fidex;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9yZXNldC5zY3NzIiwibWFpbi5jc3MiLCJfZ3JpZC5zY3NzIiwiX3ZhcmlhYmxlcy5zY3NzIiwiX21vYmlsZU1lbnUuc2NzcyIsIl9uYXZpZ2F0aW9uLnNjc3MiLCJfc2xpZGVyLnNjc3MiLCJfYWJvdXRVcy5zY3NzIiwibWFpbi5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7aUZBU2lGO0FBRWpGO2lGQUNpRjtBQ0FqRixtQ0FBbUM7QURFbkM7RUFDQyxVQUFTO0VBQ1QsV0FBVTtFQUNWLFVBQVM7RUFDVCxnQkFBZTtFQUNmLG9CQUFtQjtFQUNuQix5QkFBd0I7RUFDeEIsd0JBQXVCO0NBQ3ZCOztBQ0NELG1DQUFtQztBRENuQztFQUE4RSxlQUFjO0NBQUk7O0FBRWhHO3lGQUN5RjtBQ0d6RixtQ0FBbUM7QURGbkM7RUFDQywrQkFBc0I7VUFBdEIsdUJBQXNCO0NBQ3RCOztBQ0tELG1DQUFtQztBREhuQzs7O0VBR0MsNEJBQW1CO1VBQW5CLG9CQUFtQjtDQUNuQjs7QUFFRCxxRkFBcUY7QUFFckYsa0RBQWtEO0FBQ2xELHVIQUF1SDtBQ0l2SCxtQ0FBbUM7QURIbkM7OztFQUVPLGdCQUFlO0NBQUk7O0FBRTFCOzs7Ozs7OztFQVFFO0FBRUYsd0RBQXdEO0FDTXhELG1DQUFtQztBRExuQztFQUFNLG1CQUFrQjtDQUFJOztBQUU1Qjs7NERBRTREO0FDUzVELG1DQUFtQztBRFJuQztFQUFJLGlCQUFnQjtDQUFJOztBQ2F4QixtQ0FBbUM7QURYbkM7RUFBZSxhQUFZO0NBQUk7O0FDZ0IvQixtQ0FBbUM7QURkbkM7Ozs7RUFHUyxZQUFXO0VBQUcsY0FBYTtDQUFJOztBQ29CeEMsbUNBQW1DO0FEbEJuQztFQUFHLFVBQVM7RUFBRyxXQUFVO0VBQUcsZ0JBQWU7RUFBRyx5QkFBd0I7RUFBRyx3QkFBdUI7Q0FBSTs7QUMyQnBHLG1DQUFtQztBRHpCbkM7RUFBSyw4QkFBNkI7Q0FBSTs7QUM4QnRDLG1DQUFtQztBRDVCbkM7RUFBeUIs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QUNqRDs7QUxvY2Isb0NBQW9DO0FNM2ZwQztFQUdRLHFCQUFhO0VBQWIscUJBQWE7RUFBYixjQUFhO0VBQ2Isb0JBQWU7TUFBZixnQkFBZTtFQUVmLFlBQVc7RUFDWCxvQkFBbUI7Q0FVdEI7O0FOa2ZMLHFDQUFxQztBTW5nQnJDO0VBU1ksa0JBQWlCO0VBQ2pCLDBCQUF5QjtFQUN6QixlQUFjO0NBQ2pCOztBTjhmVCxxQ0FBcUM7QU0xZ0JyQztFQWVZLGVBQWM7Q0FDakI7O0FOK2ZULHFDQUFxQztBTS9nQnJDO0VBb0JTLFlBQVc7Q0FXZjs7QU5xZkwscUNBQXFDO0FNcGhCckM7RUF1QlksNkNBQTRDO0VBQzVDLDZCQUE0QjtFQUM1Qix1QkFBc0I7RUFFdEIsYUFBWTtFQUNaLGNBQWE7Q0FFaEI7O0FOK2ZULGdDQUFnQztBT3hoQi9CO0VBQ0csMENBQXlDO0NBQzNDOztBUDJoQkYsaUNBQWlDO0FPMWhCakM7RUFDSSxnQkFBZTtDQUNsQiIsImZpbGUiOiJtYWluLmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi8qXG5cdEhUTUw1IFJlc2V0IDo6IHN0eWxlLmNzc1xuXHQtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cdFdlIGhhdmUgbGVhcm5lZCBtdWNoIGZyb20vYmVlbiBpbnNwaXJlZCBieS90YWtlbiBjb2RlIHdoZXJlIG9mZmVyZWQgZnJvbTpcblxuXHRFcmljIE1leWVyXHRcdFx0XHRcdDo6IGh0dHA6Ly9tZXllcndlYi5jb21cblx0SFRNTDUgRG9jdG9yXHRcdFx0XHQ6OiBodHRwOi8vaHRtbDVkb2N0b3IuY29tXG5cdGFuZCB0aGUgSFRNTDUgQm9pbGVycGxhdGVcdDo6IGh0dHA6Ly9odG1sNWJvaWxlcnBsYXRlLmNvbVxuXG4tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cblxuLyogTGV0J3MgZGVmYXVsdCB0aGlzIHB1cHB5IG91dFxuLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5cbmh0bWwsIGJvZHksIGJvZHkgZGl2LCBzcGFuLCBvYmplY3QsIGlmcmFtZSwgaDEsIGgyLCBoMywgaDQsIGg1LCBoNiwgcCwgYmxvY2txdW90ZSwgcHJlLCBhYmJyLCBhZGRyZXNzLCBjaXRlLCBjb2RlLCBkZWwsIGRmbiwgZW0sIGltZywgaW5zLCBrYmQsIHEsIHNhbXAsIHNtYWxsLCBzdHJvbmcsIHN1Yiwgc3VwLCB2YXIsIGIsIGksIGRsLCBkdCwgZGQsIG9sLCB1bCwgbGksIGZpZWxkc2V0LCBmb3JtLCBsYWJlbCwgbGVnZW5kLCB0YWJsZSwgY2FwdGlvbiwgdGJvZHksIHRmb290LCB0aGVhZCwgdHIsIHRoLCB0ZCwgYXJ0aWNsZSwgYXNpZGUsIGZpZ3VyZSwgZm9vdGVyLCBoZWFkZXIsIG1lbnUsIG5hdiwgc2VjdGlvbiwgdGltZSwgbWFyaywgYXVkaW8sIHZpZGVvLCBkZXRhaWxzLCBzdW1tYXJ5IHtcblx0bWFyZ2luOiAwO1xuXHRwYWRkaW5nOiAwO1xuXHRib3JkZXI6IDA7XG5cdGZvbnQtc2l6ZTogMTAwJTtcblx0Zm9udC13ZWlnaHQ6IG5vcm1hbDtcblx0dmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xuXHRiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcbn1cblxubWFpbiwgYXJ0aWNsZSwgYXNpZGUsIGZpZ3VyZSwgZm9vdGVyLCBoZWFkZXIsIG5hdiwgc2VjdGlvbiwgZGV0YWlscywgc3VtbWFyeSB7ZGlzcGxheTogYmxvY2s7fVxuXG4vKiBIYW5kbGUgYm94LXNpemluZyB3aGlsZSBiZXR0ZXIgYWRkcmVzc2luZyBjaGlsZCBlbGVtZW50czpcbiAgIGh0dHA6Ly9jc3MtdHJpY2tzLmNvbS9pbmhlcml0aW5nLWJveC1zaXppbmctcHJvYmFibHktc2xpZ2h0bHktYmV0dGVyLWJlc3QtcHJhY3RpY2UvICovXG5odG1sIHtcblx0Ym94LXNpemluZzogYm9yZGVyLWJveDtcbn1cblxuKixcbio6YmVmb3JlLFxuKjphZnRlciB7XG5cdGJveC1zaXppbmc6IGluaGVyaXQ7XG59XG5cbi8qIGNvbnNpZGVyIHJlc2V0dGluZyB0aGUgZGVmYXVsdCBjdXJzb3I6IGh0dHBzOi8vZ2lzdC5naXRodWIuY29tL211cnRhdWdoLzUyNDcxNTQgKi9cblxuLyogUmVzcG9uc2l2ZSBpbWFnZXMgYW5kIG90aGVyIGVtYmVkZGVkIG9iamVjdHMgKi9cbi8qIGlmIHlvdSBkb24ndCBoYXZlIGZ1bGwgY29udHJvbCBvdmVyIGBpbWdgIHRhZ3MgKGlmIHlvdSBoYXZlIHRvIG92ZXJjb21lIGF0dHJpYnV0ZXMpLCBjb25zaWRlciBhZGRpbmcgaGVpZ2h0OiBhdXRvICovXG5pbWcsXG5vYmplY3QsXG5lbWJlZCB7bWF4LXdpZHRoOiAxMDAlO31cblxuLypcbiAgIE5vdGU6IGtlZXBpbmcgSU1HIGhlcmUgd2lsbCBjYXVzZSBwcm9ibGVtcyBpZiB5b3UncmUgdXNpbmcgZm9yZWdyb3VuZCBpbWFnZXMgYXMgc3ByaXRlcy5cblx0SW4gZmFjdCwgaXQgKndpbGwqIGNhdXNlIHByb2JsZW1zIHdpdGggR29vZ2xlIE1hcHMnIGNvbnRyb2xzIGF0IHNtYWxsIHNpemUuXG5cdElmIHRoaXMgaXMgdGhlIGNhc2UgZm9yIHlvdSwgdHJ5IHVuY29tbWVudGluZyB0aGUgZm9sbG93aW5nOlxuXG4jbWFwIGltZyB7XG5cdFx0bWF4LXdpZHRoOiBub25lO1xufVxuKi9cblxuLyogZm9yY2UgYSB2ZXJ0aWNhbCBzY3JvbGxiYXIgdG8gcHJldmVudCBhIGp1bXB5IHBhZ2UgKi9cbmh0bWwge292ZXJmbG93LXk6IHNjcm9sbDt9XG5cbi8qIHdlIHVzZSBhIGxvdCBvZiBVTHMgdGhhdCBhcmVuJ3QgYnVsbGV0ZWQuXG5cdHlvdSdsbCBoYXZlIHRvIHJlc3RvcmUgdGhlIGJ1bGxldHMgd2l0aGluIGNvbnRlbnQsXG5cdHdoaWNoIGlzIGZpbmUgYmVjYXVzZSB0aGV5J3JlIHByb2JhYmx5IGN1c3RvbWl6ZWQgYW55d2F5ICovXG51bCB7bGlzdC1zdHlsZTogbm9uZTt9XG5cbmJsb2NrcXVvdGUsIHEge3F1b3Rlczogbm9uZTt9XG5cbmJsb2NrcXVvdGU6YmVmb3JlLFxuYmxvY2txdW90ZTphZnRlcixcbnE6YmVmb3JlLFxucTphZnRlciB7Y29udGVudDogJyc7IGNvbnRlbnQ6IG5vbmU7fVxuXG5hIHttYXJnaW46IDA7IHBhZGRpbmc6IDA7IGZvbnQtc2l6ZTogMTAwJTsgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lOyBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDt9XG5cbmRlbCB7dGV4dC1kZWNvcmF0aW9uOiBsaW5lLXRocm91Z2g7fVxuXG5hYmJyW3RpdGxlXSwgZGZuW3RpdGxlXSB7Ym9yZGVyLWJvdHRvbTogMXB4IGRvdHRlZCAjMDAwOyBjdXJzb3I6IGhlbHA7fVxuXG4vKiB0YWJsZXMgc3RpbGwgbmVlZCBjZWxsc3BhY2luZz1cIjBcIiBpbiB0aGUgbWFya3VwICovXG50YWJsZSB7Ym9yZGVyLWNvbGxhcHNlOiBzZXBhcmF0ZTsgYm9yZGVyLXNwYWNpbmc6IDA7fVxudGgge2ZvbnQtd2VpZ2h0OiBib2xkOyB2ZXJ0aWNhbC1hbGlnbjogYm90dG9tO31cbnRkIHtmb250LXdlaWdodDogbm9ybWFsOyB2ZXJ0aWNhbC1hbGlnbjogdG9wO31cblxuaHIge2Rpc3BsYXk6IGJsb2NrOyBoZWlnaHQ6IDFweDsgYm9yZGVyOiAwOyBib3JkZXItdG9wOiAxcHggc29saWQgI2NjYzsgbWFyZ2luOiAxZW0gMDsgcGFkZGluZzogMDt9XG5cbmlucHV0LCBzZWxlY3Qge3ZlcnRpY2FsLWFsaWduOiBtaWRkbGU7fVxuXG5wcmUge1xuICAgIHdoaXRlLXNwYWNlOiBwcmU7IC8qIENTUzIgKi9cbiAgICB3aGl0ZS1zcGFjZTogcHJlLXdyYXA7IC8qIENTUyAyLjEgKi9cbiAgICB3aGl0ZS1zcGFjZTogcHJlLWxpbmU7IC8qIENTUyAzIChhbmQgMi4xIGFzIHdlbGwsIGFjdHVhbGx5KSAqL1xuICAgIHdvcmQtd3JhcDogYnJlYWstd29yZDsgLyogSUUgKi9cbn1cblxuaW5wdXRbdHlwZT1cInJhZGlvXCJdIHt2ZXJ0aWNhbC1hbGlnbjogdGV4dC1ib3R0b207fVxuaW5wdXRbdHlwZT1cImNoZWNrYm94XCJdIHt2ZXJ0aWNhbC1hbGlnbjogYm90dG9tO31cbi5pZTcgaW5wdXRbdHlwZT1cImNoZWNrYm94XCJdIHt2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7fVxuLmllNiBpbnB1dCB7dmVydGljYWwtYWxpZ246IHRleHQtYm90dG9tO31cblxuc2VsZWN0LCBpbnB1dCwgdGV4dGFyZWEge2ZvbnQ6IDk5JSBzYW5zLXNlcmlmO31cblxudGFibGUge2ZvbnQtc2l6ZTogaW5oZXJpdDsgZm9udDogMTAwJTt9XG5cbnNtYWxsIHtmb250LXNpemU6IDg1JTt9XG5cbnN0cm9uZyB7Zm9udC13ZWlnaHQ6IGJvbGQ7fVxuXG50ZCwgdGQgaW1nIHt2ZXJ0aWNhbC1hbGlnbjogdG9wO31cblxuLyogTWFrZSBzdXJlIHN1cCBhbmQgc3ViIGRvbid0IG1lc3Mgd2l0aCB5b3VyIGxpbmUtaGVpZ2h0cyBodHRwOi8vZ2lzdC5naXRodWIuY29tLzQxMzkzMCAqL1xuc3ViLCBzdXAge2ZvbnQtc2l6ZTogNzUlOyBsaW5lLWhlaWdodDogMDsgcG9zaXRpb246IHJlbGF0aXZlO31cbnN1cCB7dG9wOiAtMC41ZW07fVxuc3ViIHtib3R0b206IC0wLjI1ZW07fVxuXG4vKiBzdGFuZGFyZGl6ZSBhbnkgbW9ub3NwYWNlZCBlbGVtZW50cyAqL1xucHJlLCBjb2RlLCBrYmQsIHNhbXAge2ZvbnQtZmFtaWx5OiBtb25vc3BhY2UsIHNhbnMtc2VyaWY7fVxuXG4vKiBoYW5kIGN1cnNvciBvbiBjbGlja2FibGUgZWxlbWVudHMgKi9cbi5jbGlja2FibGUsXG5sYWJlbCxcbmlucHV0W3R5cGU9YnV0dG9uXSxcbmlucHV0W3R5cGU9c3VibWl0XSxcbmlucHV0W3R5cGU9ZmlsZV0sXG5idXR0b24ge2N1cnNvcjogcG9pbnRlcjt9XG5cbi8qIFdlYmtpdCBicm93c2VycyBhZGQgYSAycHggbWFyZ2luIG91dHNpZGUgdGhlIGNocm9tZSBvZiBmb3JtIGVsZW1lbnRzICovXG5idXR0b24sIGlucHV0LCBzZWxlY3QsIHRleHRhcmVhIHttYXJnaW46IDA7fVxuXG4vKiBtYWtlIGJ1dHRvbnMgcGxheSBuaWNlIGluIElFICovXG5idXR0b24sXG5pbnB1dFt0eXBlPWJ1dHRvbl0ge3dpZHRoOiBhdXRvOyBvdmVyZmxvdzogdmlzaWJsZTt9XG5cbi8qIHNjYWxlIGltYWdlcyBpbiBJRTcgbW9yZSBhdHRyYWN0aXZlbHkgKi9cbi5pZTcgaW1nIHstbXMtaW50ZXJwb2xhdGlvbi1tb2RlOiBiaWN1YmljO31cblxuLyogcHJldmVudCBCRyBpbWFnZSBmbGlja2VyIHVwb24gaG92ZXJcbiAgIChjb21tZW50ZWQgb3V0IGFzIHVzYWdlIGlzIHJhcmUsIGFuZCB0aGUgZmlsdGVyIHN5bnRheCBtZXNzZXMgd2l0aCBzb21lIHByZS1wcm9jZXNzb3JzKVxuLmllNiBodG1sIHtmaWx0ZXI6IGV4cHJlc3Npb24oZG9jdW1lbnQuZXhlY0NvbW1hbmQoXCJCYWNrZ3JvdW5kSW1hZ2VDYWNoZVwiLCBmYWxzZSwgdHJ1ZSkpO31cbiovXG5cbi8qIGxldCdzIGNsZWFyIHNvbWUgZmxvYXRzICovXG4uY2xlYXJmaXg6YWZ0ZXIgeyBjb250ZW50OiBcIiBcIjsgZGlzcGxheTogYmxvY2s7IGNsZWFyOiBib3RoOyB9XG4iLCIvKlxuXHRIVE1MNSBSZXNldCA6OiBzdHlsZS5jc3Ncblx0LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXHRXZSBoYXZlIGxlYXJuZWQgbXVjaCBmcm9tL2JlZW4gaW5zcGlyZWQgYnkvdGFrZW4gY29kZSB3aGVyZSBvZmZlcmVkIGZyb206XG5cblx0RXJpYyBNZXllclx0XHRcdFx0XHQ6OiBodHRwOi8vbWV5ZXJ3ZWIuY29tXG5cdEhUTUw1IERvY3Rvclx0XHRcdFx0OjogaHR0cDovL2h0bWw1ZG9jdG9yLmNvbVxuXHRhbmQgdGhlIEhUTUw1IEJvaWxlcnBsYXRlXHQ6OiBodHRwOi8vaHRtbDVib2lsZXJwbGF0ZS5jb21cblxuLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG4vKiBMZXQncyBkZWZhdWx0IHRoaXMgcHVwcHkgb3V0XG4tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cbi8qIGxpbmUgMTUsIHNyYy9zY3NzL19yZXNldC5zY3NzICovXG5odG1sLCBib2R5LCBib2R5IGRpdiwgc3Bhbiwgb2JqZWN0LCBpZnJhbWUsIGgxLCBoMiwgaDMsIGg0LCBoNSwgaDYsIHAsIGJsb2NrcXVvdGUsIHByZSwgYWJiciwgYWRkcmVzcywgY2l0ZSwgY29kZSwgZGVsLCBkZm4sIGVtLCBpbWcsIGlucywga2JkLCBxLCBzYW1wLCBzbWFsbCwgc3Ryb25nLCBzdWIsIHN1cCwgdmFyLCBiLCBpLCBkbCwgZHQsIGRkLCBvbCwgdWwsIGxpLCBmaWVsZHNldCwgZm9ybSwgbGFiZWwsIGxlZ2VuZCwgdGFibGUsIGNhcHRpb24sIHRib2R5LCB0Zm9vdCwgdGhlYWQsIHRyLCB0aCwgdGQsIGFydGljbGUsIGFzaWRlLCBmaWd1cmUsIGZvb3RlciwgaGVhZGVyLCBtZW51LCBuYXYsIHNlY3Rpb24sIHRpbWUsIG1hcmssIGF1ZGlvLCB2aWRlbywgZGV0YWlscywgc3VtbWFyeSB7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMDtcbiAgYm9yZGVyOiAwO1xuICBmb250LXNpemU6IDEwMCU7XG4gIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcbiAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG59XG5cbi8qIGxpbmUgMjUsIHNyYy9zY3NzL19yZXNldC5zY3NzICovXG5tYWluLCBhcnRpY2xlLCBhc2lkZSwgZmlndXJlLCBmb290ZXIsIGhlYWRlciwgbmF2LCBzZWN0aW9uLCBkZXRhaWxzLCBzdW1tYXJ5IHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi8qIEhhbmRsZSBib3gtc2l6aW5nIHdoaWxlIGJldHRlciBhZGRyZXNzaW5nIGNoaWxkIGVsZW1lbnRzOlxuICAgaHR0cDovL2Nzcy10cmlja3MuY29tL2luaGVyaXRpbmctYm94LXNpemluZy1wcm9iYWJseS1zbGlnaHRseS1iZXR0ZXItYmVzdC1wcmFjdGljZS8gKi9cbi8qIGxpbmUgMjksIHNyYy9zY3NzL19yZXNldC5zY3NzICovXG5odG1sIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbn1cblxuLyogbGluZSAzMywgc3JjL3Njc3MvX3Jlc2V0LnNjc3MgKi9cbiosXG4qOmJlZm9yZSxcbio6YWZ0ZXIge1xuICBib3gtc2l6aW5nOiBpbmhlcml0O1xufVxuXG4vKiBjb25zaWRlciByZXNldHRpbmcgdGhlIGRlZmF1bHQgY3Vyc29yOiBodHRwczovL2dpc3QuZ2l0aHViLmNvbS9tdXJ0YXVnaC81MjQ3MTU0ICovXG4vKiBSZXNwb25zaXZlIGltYWdlcyBhbmQgb3RoZXIgZW1iZWRkZWQgb2JqZWN0cyAqL1xuLyogaWYgeW91IGRvbid0IGhhdmUgZnVsbCBjb250cm9sIG92ZXIgYGltZ2AgdGFncyAoaWYgeW91IGhhdmUgdG8gb3ZlcmNvbWUgYXR0cmlidXRlcyksIGNvbnNpZGVyIGFkZGluZyBoZWlnaHQ6IGF1dG8gKi9cbi8qIGxpbmUgNDMsIHNyYy9zY3NzL19yZXNldC5zY3NzICovXG5pbWcsXG5vYmplY3QsXG5lbWJlZCB7XG4gIG1heC13aWR0aDogMTAwJTtcbn1cblxuLypcbiAgIE5vdGU6IGtlZXBpbmcgSU1HIGhlcmUgd2lsbCBjYXVzZSBwcm9ibGVtcyBpZiB5b3UncmUgdXNpbmcgZm9yZWdyb3VuZCBpbWFnZXMgYXMgc3ByaXRlcy5cblx0SW4gZmFjdCwgaXQgKndpbGwqIGNhdXNlIHByb2JsZW1zIHdpdGggR29vZ2xlIE1hcHMnIGNvbnRyb2xzIGF0IHNtYWxsIHNpemUuXG5cdElmIHRoaXMgaXMgdGhlIGNhc2UgZm9yIHlvdSwgdHJ5IHVuY29tbWVudGluZyB0aGUgZm9sbG93aW5nOlxuXG4jbWFwIGltZyB7XG5cdFx0bWF4LXdpZHRoOiBub25lO1xufVxuKi9cbi8qIGZvcmNlIGEgdmVydGljYWwgc2Nyb2xsYmFyIHRvIHByZXZlbnQgYSBqdW1weSBwYWdlICovXG4vKiBsaW5lIDU4LCBzcmMvc2Nzcy9fcmVzZXQuc2NzcyAqL1xuaHRtbCB7XG4gIG92ZXJmbG93LXk6IHNjcm9sbDtcbn1cblxuLyogd2UgdXNlIGEgbG90IG9mIFVMcyB0aGF0IGFyZW4ndCBidWxsZXRlZC5cblx0eW91J2xsIGhhdmUgdG8gcmVzdG9yZSB0aGUgYnVsbGV0cyB3aXRoaW4gY29udGVudCxcblx0d2hpY2ggaXMgZmluZSBiZWNhdXNlIHRoZXkncmUgcHJvYmFibHkgY3VzdG9taXplZCBhbnl3YXkgKi9cbi8qIGxpbmUgNjMsIHNyYy9zY3NzL19yZXNldC5zY3NzICovXG51bCB7XG4gIGxpc3Qtc3R5bGU6IG5vbmU7XG59XG5cbi8qIGxpbmUgNjUsIHNyYy9zY3NzL19yZXNldC5zY3NzICovXG5ibG9ja3F1b3RlLCBxIHtcbiAgcXVvdGVzOiBub25lO1xufVxuXG4vKiBsaW5lIDY3LCBzcmMvc2Nzcy9fcmVzZXQuc2NzcyAqL1xuYmxvY2txdW90ZTpiZWZvcmUsXG5ibG9ja3F1b3RlOmFmdGVyLFxucTpiZWZvcmUsXG5xOmFmdGVyIHtcbiAgY29udGVudDogJyc7XG4gIGNvbnRlbnQ6IG5vbmU7XG59XG5cbi8qIGxpbmUgNzIsIHNyYy9zY3NzL19yZXNldC5zY3NzICovXG5hIHtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwO1xuICBmb250LXNpemU6IDEwMCU7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcbiAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG59XG5cbi8qIGxpbmUgNzQsIHNyYy9zY3NzL19yZXNldC5zY3NzICovXG5kZWwge1xuICB0ZXh0LWRlY29yYXRpb246IGxpbmUtdGhyb3VnaDtcbn1cblxuLyogbGluZSA3Niwgc3JjL3Njc3MvX3Jlc2V0LnNjc3MgKi9cbmFiYnJbdGl0bGVdLCBkZm5bdGl0bGVdIHtcbiAgYm9yZGVyLWJvdHRvbTogMXB4IGRvdHRlZCAjMDAwO1xuICBjdXJzb3I6IGhlbHA7XG59XG5cbi8qIHRhYmxlcyBzdGlsbCBuZWVkIGNlbGxzcGFjaW5nPVwiMFwiIGluIHRoZSBtYXJrdXAgKi9cbi8qIGxpbmUgNzksIHNyYy9zY3NzL19yZXNldC5zY3NzICovXG50YWJsZSB7XG4gIGJvcmRlci1jb2xsYXBzZTogc2VwYXJhdGU7XG4gIGJvcmRlci1zcGFjaW5nOiAwO1xufVxuXG4vKiBsaW5lIDgwLCBzcmMvc2Nzcy9fcmVzZXQuc2NzcyAqL1xudGgge1xuICBmb250LXdlaWdodDogYm9sZDtcbiAgdmVydGljYWwtYWxpZ246IGJvdHRvbTtcbn1cblxuLyogbGluZSA4MSwgc3JjL3Njc3MvX3Jlc2V0LnNjc3MgKi9cbnRkIHtcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgdmVydGljYWwtYWxpZ246IHRvcDtcbn1cblxuLyogbGluZSA4Mywgc3JjL3Njc3MvX3Jlc2V0LnNjc3MgKi9cbmhyIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGhlaWdodDogMXB4O1xuICBib3JkZXI6IDA7XG4gIGJvcmRlci10b3A6IDFweCBzb2xpZCAjY2NjO1xuICBtYXJnaW46IDFlbSAwO1xuICBwYWRkaW5nOiAwO1xufVxuXG4vKiBsaW5lIDg1LCBzcmMvc2Nzcy9fcmVzZXQuc2NzcyAqL1xuaW5wdXQsIHNlbGVjdCB7XG4gIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG59XG5cbi8qIGxpbmUgODcsIHNyYy9zY3NzL19yZXNldC5zY3NzICovXG5wcmUge1xuICB3aGl0ZS1zcGFjZTogcHJlO1xuICAvKiBDU1MyICovXG4gIHdoaXRlLXNwYWNlOiBwcmUtd3JhcDtcbiAgLyogQ1NTIDIuMSAqL1xuICB3aGl0ZS1zcGFjZTogcHJlLWxpbmU7XG4gIC8qIENTUyAzIChhbmQgMi4xIGFzIHdlbGwsIGFjdHVhbGx5KSAqL1xuICB3b3JkLXdyYXA6IGJyZWFrLXdvcmQ7XG4gIC8qIElFICovXG59XG5cbi8qIGxpbmUgOTQsIHNyYy9zY3NzL19yZXNldC5zY3NzICovXG5pbnB1dFt0eXBlPVwicmFkaW9cIl0ge1xuICB2ZXJ0aWNhbC1hbGlnbjogdGV4dC1ib3R0b207XG59XG5cbi8qIGxpbmUgOTUsIHNyYy9zY3NzL19yZXNldC5zY3NzICovXG5pbnB1dFt0eXBlPVwiY2hlY2tib3hcIl0ge1xuICB2ZXJ0aWNhbC1hbGlnbjogYm90dG9tO1xufVxuXG4vKiBsaW5lIDk2LCBzcmMvc2Nzcy9fcmVzZXQuc2NzcyAqL1xuLmllNyBpbnB1dFt0eXBlPVwiY2hlY2tib3hcIl0ge1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XG59XG5cbi8qIGxpbmUgOTcsIHNyYy9zY3NzL19yZXNldC5zY3NzICovXG4uaWU2IGlucHV0IHtcbiAgdmVydGljYWwtYWxpZ246IHRleHQtYm90dG9tO1xufVxuXG4vKiBsaW5lIDk5LCBzcmMvc2Nzcy9fcmVzZXQuc2NzcyAqL1xuc2VsZWN0LCBpbnB1dCwgdGV4dGFyZWEge1xuICBmb250OiA5OSUgc2Fucy1zZXJpZjtcbn1cblxuLyogbGluZSAxMDEsIHNyYy9zY3NzL19yZXNldC5zY3NzICovXG50YWJsZSB7XG4gIGZvbnQtc2l6ZTogaW5oZXJpdDtcbiAgZm9udDogMTAwJTtcbn1cblxuLyogbGluZSAxMDMsIHNyYy9zY3NzL19yZXNldC5zY3NzICovXG5zbWFsbCB7XG4gIGZvbnQtc2l6ZTogODUlO1xufVxuXG4vKiBsaW5lIDEwNSwgc3JjL3Njc3MvX3Jlc2V0LnNjc3MgKi9cbnN0cm9uZyB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuXG4vKiBsaW5lIDEwNywgc3JjL3Njc3MvX3Jlc2V0LnNjc3MgKi9cbnRkLCB0ZCBpbWcge1xuICB2ZXJ0aWNhbC1hbGlnbjogdG9wO1xufVxuXG4vKiBNYWtlIHN1cmUgc3VwIGFuZCBzdWIgZG9uJ3QgbWVzcyB3aXRoIHlvdXIgbGluZS1oZWlnaHRzIGh0dHA6Ly9naXN0LmdpdGh1Yi5jb20vNDEzOTMwICovXG4vKiBsaW5lIDExMCwgc3JjL3Njc3MvX3Jlc2V0LnNjc3MgKi9cbnN1Yiwgc3VwIHtcbiAgZm9udC1zaXplOiA3NSU7XG4gIGxpbmUtaGVpZ2h0OiAwO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG59XG5cbi8qIGxpbmUgMTExLCBzcmMvc2Nzcy9fcmVzZXQuc2NzcyAqL1xuc3VwIHtcbiAgdG9wOiAtMC41ZW07XG59XG5cbi8qIGxpbmUgMTEyLCBzcmMvc2Nzcy9fcmVzZXQuc2NzcyAqL1xuc3ViIHtcbiAgYm90dG9tOiAtMC4yNWVtO1xufVxuXG4vKiBzdGFuZGFyZGl6ZSBhbnkgbW9ub3NwYWNlZCBlbGVtZW50cyAqL1xuLyogbGluZSAxMTUsIHNyYy9zY3NzL19yZXNldC5zY3NzICovXG5wcmUsIGNvZGUsIGtiZCwgc2FtcCB7XG4gIGZvbnQtZmFtaWx5OiBtb25vc3BhY2UsIHNhbnMtc2VyaWY7XG59XG5cbi8qIGhhbmQgY3Vyc29yIG9uIGNsaWNrYWJsZSBlbGVtZW50cyAqL1xuLyogbGluZSAxMTgsIHNyYy9zY3NzL19yZXNldC5zY3NzICovXG4uY2xpY2thYmxlLFxubGFiZWwsXG5pbnB1dFt0eXBlPWJ1dHRvbl0sXG5pbnB1dFt0eXBlPXN1Ym1pdF0sXG5pbnB1dFt0eXBlPWZpbGVdLFxuYnV0dG9uIHtcbiAgY3Vyc29yOiBwb2ludGVyO1xufVxuXG4vKiBXZWJraXQgYnJvd3NlcnMgYWRkIGEgMnB4IG1hcmdpbiBvdXRzaWRlIHRoZSBjaHJvbWUgb2YgZm9ybSBlbGVtZW50cyAqL1xuLyogbGluZSAxMjYsIHNyYy9zY3NzL19yZXNldC5zY3NzICovXG5idXR0b24sIGlucHV0LCBzZWxlY3QsIHRleHRhcmVhIHtcbiAgbWFyZ2luOiAwO1xufVxuXG4vKiBtYWtlIGJ1dHRvbnMgcGxheSBuaWNlIGluIElFICovXG4vKiBsaW5lIDEyOSwgc3JjL3Njc3MvX3Jlc2V0LnNjc3MgKi9cbmJ1dHRvbixcbmlucHV0W3R5cGU9YnV0dG9uXSB7XG4gIHdpZHRoOiBhdXRvO1xuICBvdmVyZmxvdzogdmlzaWJsZTtcbn1cblxuLyogc2NhbGUgaW1hZ2VzIGluIElFNyBtb3JlIGF0dHJhY3RpdmVseSAqL1xuLyogbGluZSAxMzMsIHNyYy9zY3NzL19yZXNldC5zY3NzICovXG4uaWU3IGltZyB7XG4gIC1tcy1pbnRlcnBvbGF0aW9uLW1vZGU6IGJpY3ViaWM7XG59XG5cbi8qIHByZXZlbnQgQkcgaW1hZ2UgZmxpY2tlciB1cG9uIGhvdmVyXG4gICAoY29tbWVudGVkIG91dCBhcyB1c2FnZSBpcyByYXJlLCBhbmQgdGhlIGZpbHRlciBzeW50YXggbWVzc2VzIHdpdGggc29tZSBwcmUtcHJvY2Vzc29ycylcbi5pZTYgaHRtbCB7ZmlsdGVyOiBleHByZXNzaW9uKGRvY3VtZW50LmV4ZWNDb21tYW5kKFwiQmFja2dyb3VuZEltYWdlQ2FjaGVcIiwgZmFsc2UsIHRydWUpKTt9XG4qL1xuLyogbGV0J3MgY2xlYXIgc29tZSBmbG9hdHMgKi9cbi8qIGxpbmUgMTQxLCBzcmMvc2Nzcy9fcmVzZXQuc2NzcyAqL1xuLmNsZWFyZml4OmFmdGVyIHtcbiAgY29udGVudDogXCIgXCI7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBjbGVhcjogYm90aDtcbn1cblxuLyogbGluZSAzLCBzcmMvc2Nzcy9fZ3JpZC5zY3NzICovXG4uY29udGFpbmVyIHtcbiAgd2lkdGg6IDEwMCUgIWltcG9ydGFudDtcbiAgbWF4LXdpZHRoOiAxMjAwcHg7XG4gIG1hcmdpbjogMCBhdXRvO1xufVxuXG4vKiBsaW5lIDEwLCBzcmMvc2Nzcy9fZ3JpZC5zY3NzICovXG4uY29udGFpbmVyIC5yb3c6OmJlZm9yZSwgLmNvbnRhaW5lciAucm93OjphZnRlciB7XG4gIGNvbnRlbnQ6IFwiXCI7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBoZWlnaHQ6IDA7XG4gIHZpc2liaWxpdHk6IGhpZGRlbjtcbiAgY2xlYXI6IGJvdGg7XG59XG5cbi8qIGxpbmUgMTksIHNyYy9zY3NzL19ncmlkLnNjc3MgKi9cbi5jb250YWluZXIgW2NsYXNzKj0nY29sLSddIHtcbiAgd2lkdGg6IDEwMCU7XG4gIG1pbi1oZWlnaHQ6IDFweDtcbiAgZmxvYXQ6IG5vbmU7XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiA2NDBweCkge1xuICAvKiBsaW5lIDI2LCBzcmMvc2Nzcy9fZ3JpZC5zY3NzICovXG4gIC5jb250YWluZXIgW2NsYXNzKj0nY29sLSddIHtcbiAgICBmbG9hdDogbGVmdDtcbiAgfVxuICAvKiBsaW5lIDMxLCBzcmMvc2Nzcy9fZ3JpZC5zY3NzICovXG4gIC5jb250YWluZXIgLmNvbC0xIHtcbiAgICB3aWR0aDogMTIuNSU7XG4gIH1cbiAgLyogbGluZSAzMSwgc3JjL3Njc3MvX2dyaWQuc2NzcyAqL1xuICAuY29udGFpbmVyIC5jb2wtMiB7XG4gICAgd2lkdGg6IDI1JTtcbiAgfVxuICAvKiBsaW5lIDMxLCBzcmMvc2Nzcy9fZ3JpZC5zY3NzICovXG4gIC5jb250YWluZXIgLmNvbC0zIHtcbiAgICB3aWR0aDogMzcuNSU7XG4gIH1cbiAgLyogbGluZSAzMSwgc3JjL3Njc3MvX2dyaWQuc2NzcyAqL1xuICAuY29udGFpbmVyIC5jb2wtNCB7XG4gICAgd2lkdGg6IDUwJTtcbiAgfVxuICAvKiBsaW5lIDMxLCBzcmMvc2Nzcy9fZ3JpZC5zY3NzICovXG4gIC5jb250YWluZXIgLmNvbC01IHtcbiAgICB3aWR0aDogNjIuNSU7XG4gIH1cbiAgLyogbGluZSAzMSwgc3JjL3Njc3MvX2dyaWQuc2NzcyAqL1xuICAuY29udGFpbmVyIC5jb2wtNiB7XG4gICAgd2lkdGg6IDc1JTtcbiAgfVxuICAvKiBsaW5lIDMxLCBzcmMvc2Nzcy9fZ3JpZC5zY3NzICovXG4gIC5jb250YWluZXIgLmNvbC03IHtcbiAgICB3aWR0aDogODcuNSU7XG4gIH1cbiAgLyogbGluZSAzMSwgc3JjL3Njc3MvX2dyaWQuc2NzcyAqL1xuICAuY29udGFpbmVyIC5jb2wtOCB7XG4gICAgd2lkdGg6IDEwMCU7XG4gIH1cbn1cblxuLyogbGluZSAzLCBzcmMvc2Nzcy9fbW9iaWxlTWVudS5zY3NzICovXG4ubW9iaWxlIHtcbiAgZm9udC1zaXplOiA0MHB4O1xuICBjb2xvcjogcGluaztcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xufVxuXG4vKiBsaW5lIDksIHNyYy9zY3NzL19tb2JpbGVNZW51LnNjc3MgKi9cbi5tb2JpbGUgaSB7XG4gIG1hcmdpbi1sZWZ0OiAyJTtcbiAgbWFyZ2luLXRvcDogMiU7XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiA2NDBweCkge1xuICAvKiBsaW5lIDMsIHNyYy9zY3NzL19tb2JpbGVNZW51LnNjc3MgKi9cbiAgLm1vYmlsZSB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgfVxufVxuXG4vKiBsaW5lIDIsIHNyYy9zY3NzL19uYXZpZ2F0aW9uLnNjc3MgKi9cbmhlYWRlciB7XG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xufVxuXG4vKiBsaW5lIDQsIHNyYy9zY3NzL19uYXZpZ2F0aW9uLnNjc3MgKi9cbmhlYWRlciAubG9nbyB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xufVxuXG4vKiBsaW5lIDgsIHNyYy9zY3NzL19uYXZpZ2F0aW9uLnNjc3MgKi9cbmhlYWRlciAubG9nbyBpbWcge1xuICB3aWR0aDogMjAwcHg7XG4gIGhlaWdodDogMjAwcHg7XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiA2NDBweCkge1xuICAvKiBsaW5lIDgsIHNyYy9zY3NzL19uYXZpZ2F0aW9uLnNjc3MgKi9cbiAgaGVhZGVyIC5sb2dvIGltZyB7XG4gICAgZmxleC13cmFwOiBub3dyYXA7XG4gICAgd2lkdGg6IDMwMHB4O1xuICAgIGhlaWdodDogMzAwcHg7XG4gIH1cbn1cblxuLyogbGluZSAyMCwgc3JjL3Njc3MvX25hdmlnYXRpb24uc2NzcyAqL1xubmF2Lm1lbnUge1xuICB3aWR0aDogMTAwJTtcbiAgZGlzcGxheTogbm9uZTtcbn1cblxuQG1lZGlhIChtaW4td2lkdGg6IDY0MHB4KSB7XG4gIC8qIGxpbmUgMjAsIHNyYy9zY3NzL19uYXZpZ2F0aW9uLnNjc3MgKi9cbiAgbmF2Lm1lbnUge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICB9XG59XG5cbi8qIGxpbmUgMjcsIHNyYy9zY3NzL19uYXZpZ2F0aW9uLnNjc3MgKi9cbm5hdi5tZW51IHVsIHtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiA2NDBweCkge1xuICAvKiBsaW5lIDI3LCBzcmMvc2Nzcy9fbmF2aWdhdGlvbi5zY3NzICovXG4gIG5hdi5tZW51IHVsIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICB9XG59XG5cbi8qIGxpbmUgMzIsIHNyYy9zY3NzL19uYXZpZ2F0aW9uLnNjc3MgKi9cbm5hdi5tZW51IHVsIGxpIHtcbiAgZm9udC1zaXplOiAxNnB4O1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGJvcmRlcjogMnB4IHNvbGlkIHRyYW5zcGFyZW50O1xuICBib3JkZXItYm90dG9tLWNvbG9yOiBwaW5rO1xuICBwYWRkaW5nOiAxJTtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgbWFyZ2luLWJvdHRvbTogMSU7XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiA2NDBweCkge1xuICAvKiBsaW5lIDMyLCBzcmMvc2Nzcy9fbmF2aWdhdGlvbi5zY3NzICovXG4gIG5hdi5tZW51IHVsIGxpIHtcbiAgICBmb250LXNpemU6IDE4cHg7XG4gICAgd2lkdGg6IDE2LjY2JTtcbiAgICBib3JkZXItY29sb3I6IHRyYW5zcGFyZW50O1xuICAgIGJvcmRlci1sZWZ0LWNvbG9yOiBwaW5rO1xuICAgIGJvcmRlci1yaWdodC1jb2xvcjogcGluaztcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIH1cbiAgLyogbGluZSA1MSwgc3JjL3Njc3MvX25hdmlnYXRpb24uc2NzcyAqL1xuICBuYXYubWVudSB1bCBsaTpudGgtb2YtdHlwZSgybikge1xuICAgIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gIH1cbiAgLyogbGluZSA1NCwgc3JjL3Njc3MvX25hdmlnYXRpb24uc2NzcyAqL1xuICBuYXYubWVudSB1bCBsaTpudGgtb2YtdHlwZSg2KSB7XG4gICAgYm9yZGVyLXJpZ2h0LWNvbG9yOiBwaW5rO1xuICB9XG59XG5cbi8qIGxpbmUgNTksIHNyYy9zY3NzL19uYXZpZ2F0aW9uLnNjc3MgKi9cbm5hdi5tZW51IHVsIGxpIGEge1xuICBjb2xvcjogYmxhY2s7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgbWFyZ2luLWJvdHRvbTogMSU7XG59XG5cbi8qIGxpbmUgMywgc3JjL3Njc3MvX3NsaWRlci5zY3NzICovXG4uc2xpZGVyV3JhcGVyIHtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbi8qIGxpbmUgOCwgc3JjL3Njc3MvX3NsaWRlci5zY3NzICovXG4uc2xpZGVyV3JhcGVyIC5zbGlkZXIge1xuICBkaXNwbGF5OiBibG9jaztcbiAgd2lkdGg6IDQwMCU7XG59XG5cbi8qIGxpbmUgMTMsIHNyYy9zY3NzL19zbGlkZXIuc2NzcyAqL1xuLnNsaWRlcldyYXBlciAuc2xpZGVyIGRpdiB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICB3aWR0aDogMjUlO1xuICBoZWlnaHQ6IDMwdmg7XG4gIGZsb2F0OiBsZWZ0O1xuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXI7XG4gIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG59XG5cbi8qIGxpbmUgMjgsIHNyYy9zY3NzL19zbGlkZXIuc2NzcyAqL1xuLnNsaWRlcldyYXBlciAuc2xpZGVyIGRpdi5zbGlkZXJUZXh0IHtcbiAgaGVpZ2h0OiAxMDBweDtcbiAgd2lkdGg6IDIwMHB4O1xuICBjb2xvcjogd2hpdGU7XG4gIGZvbnQtc2l6ZTogMThweDtcbiAgYWxpZ24tc2VsZjogY2VudGVyO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMC42KTtcbn1cblxuQG1lZGlhIChtaW4td2lkdGg6IDY0MHB4KSB7XG4gIC8qIGxpbmUgMjgsIHNyYy9zY3NzL19zbGlkZXIuc2NzcyAqL1xuICAuc2xpZGVyV3JhcGVyIC5zbGlkZXIgZGl2LnNsaWRlclRleHQge1xuICAgIGhlaWdodDogMjAwcHg7XG4gICAgd2lkdGg6IDQwMHB4O1xuICAgIGZvbnQtc2l6ZTogMjZweDtcbiAgICBwYWRkaW5nOiAxJTtcbiAgfVxufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogNjQwcHgpIHtcbiAgLyogbGluZSAxMywgc3JjL3Njc3MvX3NsaWRlci5zY3NzICovXG4gIC5zbGlkZXJXcmFwZXIgLnNsaWRlciBkaXYge1xuICAgIGhlaWdodDogNDAwcHg7XG4gIH1cbn1cblxuLyogbGluZSA1MCwgc3JjL3Njc3MvX3NsaWRlci5zY3NzICovXG4uc2xpZGVyV3JhcGVyIC5zbGlkZXIgZGl2LnNsaWRlckltZzEge1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIuLi9pbWFnZXMvc2xpZGVyMS5qcGdcIik7XG59XG5cbi8qIGxpbmUgNTMsIHNyYy9zY3NzL19zbGlkZXIuc2NzcyAqL1xuLnNsaWRlcldyYXBlciAuc2xpZGVyIGRpdi5zbGlkZXJJbWcyIHtcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiLi4vaW1hZ2VzL3NsaWRlcjIuanBnXCIpO1xufVxuXG4vKiBsaW5lIDU2LCBzcmMvc2Nzcy9fc2xpZGVyLnNjc3MgKi9cbi5zbGlkZXJXcmFwZXIgLnNsaWRlciBkaXYuc2xpZGVySW1nMyB7XG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi4uL2ltYWdlcy9zbGlkZXIzLmpwZ1wiKTtcbn1cblxuLyogbGluZSA1LCBzcmMvc2Nzcy9fYWJvdXRVcy5zY3NzICovXG4jYWJvdXRVcyAuYWJvdXRVc19kZXNjIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC13cmFwOiB3cmFwO1xuICBwYWRkaW5nOiA1JTtcbiAgbGV0dGVyLXNwYWNpbmc6IDFweDtcbn1cblxuLyogbGluZSAxMSwgc3JjL3Njc3MvX2Fib3V0VXMuc2NzcyAqL1xuI2Fib3V0VXMgLmFib3V0VXNfZGVzYyBoMSB7XG4gIG1hcmdpbi1ib3R0b206IDElO1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICBmb250LXNpemU6IDJlbTtcbn1cblxuLyogbGluZSAxNywgc3JjL3Njc3MvX2Fib3V0VXMuc2NzcyAqL1xuI2Fib3V0VXMgLmFib3V0VXNfZGVzYyBwIHtcbiAgZm9udC1zaXplOiAxZW07XG59XG5cbi8qIGxpbmUgMjIsIHNyYy9zY3NzL19hYm91dFVzLnNjc3MgKi9cbiNhYm91dFVzIC5hYm91dFVzX3BpYyB7XG4gIHBhZGRpbmc6IDUlO1xufVxuXG4vKiBsaW5lIDI1LCBzcmMvc2Nzcy9fYWJvdXRVcy5zY3NzICovXG4jYWJvdXRVcyAuYWJvdXRVc19waWMgLmFib3V0VXNfaW1nIHtcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiLi4vaW1hZ2VzL2Fib3V0LmpwZ1wiKTtcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgd2lkdGg6IDQ5OHB4O1xuICBoZWlnaHQ6IDM3M3B4O1xufVxuXG4vKiBsaW5lIDgsIHNyYy9zY3NzL21haW4uc2NzcyAqL1xuKiB7XG4gIGZvbnQtZmFtaWx5OiAnU291cmNlIENvZGUgUHJvJywgbW9ub3NwYWNlO1xufVxuXG4vKiBsaW5lIDExLCBzcmMvc2Nzcy9tYWluLnNjc3MgKi9cbi5zdGlja3kge1xuICBwb3NpdGlvbjogZmlkZXg7XG59XG4iLCJAaW1wb3J0ICd2YXJpYWJsZXMnO1xuXG4uY29udGFpbmVye1xuXG4gICAgd2lkdGg6IDEwMCUgIWltcG9ydGFudDtcbiAgICBtYXgtd2lkdGg6ICRncmlkLWNvbnRhaW5lci13aWR0aDtcbiAgICBtYXJnaW46IDAgYXV0bztcblxuICAgIC5yb3d7XG4gICAgICAgICY6OmJlZm9yZSwgJjo6YWZ0ZXIge1xuICAgICAgICBjb250ZW50OiBcIlwiO1xuICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgaGVpZ2h0OiAwO1xuICAgICAgICB2aXNpYmlsaXR5OiBoaWRkZW47XG4gICAgICAgIGNsZWFyOiBib3RoO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgW2NsYXNzKj0nY29sLSddeyAvL21vYmlsZSBmaXJzdDsgYWZ0ZXIgNjQwcHggY29sdW1ucyB3aXRoIHdpbGwgYmUgYWRqdXN0IGFjY29yZGluZyB0byBiZWxvdyBmdW5jdGlvblxuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgbWluLWhlaWdodDogMXB4O1xuICAgICAgICBmbG9hdDogbm9uZTtcbiAgICB9XG5cbiAgICBAbWVkaWEgI3skYnJlYWtwb2ludH0geyBcbiAgICAgICAgW2NsYXNzKj0nY29sLSdde1xuICAgICAgICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgICAgIH1cbiAgICAgICAgLy9mbiBmb3IgY3JlYXRpbmdcbiAgICAgICAgQGZvciAkaSBmcm9tIDEgdGhyb3VnaCAkZ3JpZC1jb2x1bW5ze1xuXHRcdFx0LmNvbC0jeyRpfSB7XG5cdFx0XHRcdHdpZHRoOiAkZ3JpZC1jb2x1bW4td2lkdGggKiAkaTtcblx0XHRcdH1cblx0XHR9XG4gICAgfSAgICBcbn1cbiIsIiRncmlkLWNvbHVtbnM6IDg7XG4kZ3JpZC1jb250YWluZXItd2lkdGg6IDEyMDBweDtcbiRncmlkLWNvbHVtbi13aWR0aDogMTAwJSAvICRncmlkLWNvbHVtbnM7XG4kYnJlYWtwb2ludDogKG1pbi13aWR0aDogNjQwcHgpOyIsIkBpbXBvcnQgJ3ZhcmlhYmxlcyc7XG5cbi5tb2JpbGV7XG4gICAgZm9udC1zaXplOiA0MHB4O1xuICAgIGNvbG9yOiBwaW5rO1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xuXG4gICAgaXtcbiAgICAgICAgbWFyZ2luLWxlZnQ6IDIlO1xuICAgICAgICBtYXJnaW4tdG9wOiAyJTtcblxuICAgIH1cblxuICAgIEBtZWRpYSAjeyRicmVha3BvaW50fXtcbiAgICAgICAgZGlzcGxheTogbm9uZTtcbiAgICB9XG59IiwiQGltcG9ydCAndmFyaWFibGVzJztcbmhlYWRlciB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG4gICAgLmxvZ28ge1xuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICAgICAgXG4gICAgICAgIGltZyB7XG4gICAgICAgICAgICB3aWR0aDogMjAwcHg7XG4gICAgICAgICAgICBoZWlnaHQ6IDIwMHB4O1xuICAgICAgICAgICAgQG1lZGlhICN7JGJyZWFrcG9pbnR9IHtcbiAgICAgICAgICAgICAgICBmbGV4LXdyYXA6IG5vd3JhcDtcbiAgICAgICAgICAgICAgICB3aWR0aDogMzAwcHg7XG4gICAgICAgICAgICAgICAgaGVpZ2h0OiAzMDBweDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbn1cblxubmF2Lm1lbnUge1xuXG4gICAgd2lkdGg6IDEwMCU7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgICAgICAgIEBtZWRpYSAjeyRicmVha3BvaW50fSB7XG4gICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgICB9XG4gICAgdWx7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICAgICAgQG1lZGlhICN7JGJyZWFrcG9pbnR9IHtcbiAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgICB9ICAgICAgIFxuICAgICAgICBsaSB7XG4gICAgICAgIGZvbnQtc2l6ZTogMTZweDtcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgICBcbiAgICAgICAgYm9yZGVyOiAycHggc29saWQgdHJhbnNwYXJlbnQ7XG4gICAgICAgIGJvcmRlci1ib3R0b20tY29sb3I6IHBpbms7XG5cbiAgICAgICAgcGFkZGluZzogMSU7XG4gICAgICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gICAgICAgIG1hcmdpbi1ib3R0b206IDElO1xuXG4gICAgICAgICAgICBAbWVkaWEgI3skYnJlYWtwb2ludH0ge1xuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMThweDtcbiAgICAgICAgICAgICAgICB3aWR0aDogMTYuNjYlO1xuICAgICAgICAgICAgICAgIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gICAgICAgICAgICAgICAgYm9yZGVyLWxlZnQtY29sb3I6IHBpbms7XG4gICAgICAgICAgICAgICAgYm9yZGVyLXJpZ2h0LWNvbG9yOiBwaW5rO1xuICAgICAgICAgICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcblxuICAgICAgICAgICAgICAgICY6bnRoLW9mLXR5cGUoMm4pe1xuICAgICAgICAgICAgICAgICAgICBib3JkZXItY29sb3I6IHRyYW5zcGFyZW50O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAmOm50aC1vZi10eXBlKDYpe1xuICAgICAgICAgICAgICAgICAgICBib3JkZXItcmlnaHQtY29sb3I6IHBpbms7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBheyBcbiAgICAgICAgICAgICAgICBjb2xvcjogYmxhY2s7XG4gICAgICAgICAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDElO1xuXG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG5cbn1cbiIsIkBpbXBvcnQgJ3ZhcmlhYmxlcyc7XG5cbi5zbGlkZXJXcmFwZXJ7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBcblxuICAgIC5zbGlkZXJ7XG4gICAgICAgIGRpc3BsYXk6YmxvY2s7XG4gICAgICAgIHdpZHRoOiA0MDAlO1xuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIGRpdntcbiAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICAgICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuXG4gICAgICAgICAgICBcblxuICAgICAgICAgICAgd2lkdGg6IDI1JTsgXG4gICAgICAgICAgICBoZWlnaHQ6MzB2aDtcbiAgICAgICAgICAgIGZsb2F0OiBsZWZ0O1xuICAgICAgICAgICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgICAgICAgICAgIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlcjtcbiAgICAgICAgICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG5cbiAgICAgICAgICAgICAmLnNsaWRlclRleHR7XG4gICAgICAgICAgICAgICAgaGVpZ2h0OiAxMDBweDtcbiAgICAgICAgICAgICAgICB3aWR0aDogMjAwcHg7XG4gICAgICAgICAgICAgICAgY29sb3I6IHdoaXRlO1xuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMThweDtcblxuICAgICAgICAgICAgICAgIGFsaWduLXNlbGY6IGNlbnRlcjtcbiAgICAgICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG5cbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsMCwgMC42KTtcblxuICAgICAgICAgICAgICAgIEBtZWRpYSAjeyRicmVha3BvaW50fXtcbiAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiAyMDBweDtcbiAgICAgICAgICAgICAgICAgICAgd2lkdGg6IDQwMHB4O1xuICAgICAgICAgICAgICAgICAgICBmb250LXNpemU6MjZweDtcbiAgICAgICAgICAgICAgICAgICAgcGFkZGluZzogMSU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBAbWVkaWEgI3skYnJlYWtwb2ludH17XG4gICAgICAgICAgICAgICAgaGVpZ2h0OiA0MDBweDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgICYuc2xpZGVySW1nMXtcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJy4uL2ltYWdlcy9zbGlkZXIxLmpwZycpXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAmLnNsaWRlckltZzJ7XG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCcuLi9pbWFnZXMvc2xpZGVyMi5qcGcnKVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgJi5zbGlkZXJJbWcze1xuICAgICAgICAgICAgICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybCgnLi4vaW1hZ2VzL3NsaWRlcjMuanBnJylcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbn1cblxuXG4gICAiLCJAaW1wb3J0ICcuL3ZhcmlhYmxlcyc7XG5cbiNhYm91dFVze1xuXG4gICAgLmFib3V0VXNfZGVzY3tcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgZmxleC13cmFwOiB3cmFwO1xuXG4gICAgICAgIHBhZGRpbmc6IDUlO1xuICAgICAgICBsZXR0ZXItc3BhY2luZzogMXB4O1xuICAgICAgICBoMXtcbiAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDElO1xuICAgICAgICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMmVtO1xuICAgICAgICB9XG5cbiAgICAgICAgcHtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMWVtO1xuICAgICAgICB9XG4gICAgfVxuICAgIFxuICAgIC5hYm91dFVzX3BpY3tcbiAgICAgICAgIHBhZGRpbmc6IDUlO1xuICAgICAgICAgXG4gICAgICAgIC5hYm91dFVzX2ltZ3tcbiAgICAgICAgICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybCgnLi4vaW1hZ2VzL2Fib3V0LmpwZycpO1xuICAgICAgICAgICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgICAgICAgICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG5cbiAgICAgICAgICAgIHdpZHRoOiA0OThweDtcbiAgICAgICAgICAgIGhlaWdodDogMzczcHg7XG5cbiAgICAgICAgfVxuICAgIH1cbiAgICBcbn0iLCJAaW1wb3J0ICcuL3Jlc2V0JztcbkBpbXBvcnQgJy4vZ3JpZCc7XG5AaW1wb3J0ICcuL21vYmlsZU1lbnUnO1xuQGltcG9ydCAnLi9uYXZpZ2F0aW9uJztcbkBpbXBvcnQgJy4vc2xpZGVyJztcbkBpbXBvcnQgJy4vYWJvdXRVcyc7XG5cbiAqe1xuICAgIGZvbnQtZmFtaWx5OiAnU291cmNlIENvZGUgUHJvJywgbW9ub3NwYWNlO1xuIH1cbi5zdGlja3l7XG4gICAgcG9zaXRpb246IGZpZGV4O1xufSJdfQ== */
